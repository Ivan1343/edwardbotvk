# -*- coding: utf8 -*-
#–ë–æ—Ç –ï–¥–≤–∞—Ä–¥
import vk_api
import random

import os
import time

import requests # –ú–æ–¥—É–ª—å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ URL
from bs4 import BeautifulSoup # –ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å HTML

import wikipedia

from translate import Translator

from pyowm.owm import OWM
from pyowm.utils.config import get_default_config

from vk_api import VkApi
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType, VkBotMessageEvent
from vk_api.utils import get_random_id

from vk_api.keyboard import VkKeyboard, VkKeyboardColor #–ö–õ–ê–í–ò–ê–¢–£–†–ê


keyboard_joke = VkKeyboard(one_time=False, inline=True)
keyboard_joke.add_button('–°–ª–µ–¥—É—é—â–∏–π –∞–Ω–µ–∫–¥–æ—ÇüòÇ', color=VkKeyboardColor.POSITIVE)

keyboard_history = VkKeyboard(one_time=False, inline=True)
keyboard_history.add_button('–°–ª–µ–¥—É—é—â–∞—è –∏—Å—Ç–æ—Ä–∏—èüò±', color=VkKeyboardColor.NEGATIVE)

keyboard_citat = VkKeyboard(one_time=False, inline=True)
keyboard_citat.add_button('–°–ª–µ–¥—É—é—â–∞—è —Ü–∏—Ç–∞—Ç–∞üìï', color=VkKeyboardColor.POSITIVE)

keyboard_balance = VkKeyboard(one_time=False, inline=True)
keyboard_balance.add_button('–ë–∞–ª–∞–Ω—Åüí∞', color=VkKeyboardColor.POSITIVE)

keyboard_gethelp = VkKeyboard(one_time=False, inline=True)
keyboard_gethelp.add_button('–ü–æ–ª—É—á–∏—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –ø–æ–º–æ—â—åüí∞', color=VkKeyboardColor.PRIMARY)
keyboard_gethelp.add_button('–ë–æ–Ω—É—ÅüéÅ', color=VkKeyboardColor.PRIMARY)


from covid.api import CovId19Data #–ö–û–†–û–ù–ê–í–ò–†–£–°


from Phrases import hello_list_user, hello_list_bot, fail_list_bot, user_bot_list, mates_list_user, mates_list_bot, why_list_bot, case_list_bot, case_list_bot2, sorry_bot_list, answer_list_user, answer_list_bot, yes_list_bot, no_list_bot
from commands import help_list_user, help_list_bot, help_list_bot2, joke_list_user, history_list_user, ball_list, infa_list_bot, id_list, cicat_list_user
from History import history_list_bot

def write_message(sender, message): #–û–¢–ü–†–ê–í–ö–ê –°–û–û–ë–©–ï–ù–ò–Ø –í –ë–ï–°–ï–î–£
	vk_session.method('messages.send', {'chat_id': sender, 'message': message, 'random_id': get_random_id()})

def write_message2(sender, message): #–û–¢–ü–†–ê–í–ö–ê –°–û–û–ë–©–ï–ù–ò–Ø –í –õ–°
	vk_session.method('messages.send', {'user_id': sender, 'message': message, 'random_id': get_random_id()})

def edit_chat(ids, title): #–ò–ó–ú–ï–ù–ï–ù–ò–ï –ù–ê–ó–í–ê–ù–ò–Ø –ë–ï–°–ï–î–´
	vk_session.method('messages.editChat', {'chat_id': ids, 'title': title})


def write_joke(sender, message): #–û–¢–ü–†–ê–í–ö–ê –ö–õ–ê–í–ò–ê–¢–£–†–´ –í –ë–ï–°–ï–î–£ –ê–ù–ï–ö–î–û–¢
	vk_session.method('messages.send', {'chat_id': sender, 'message': message, 'random_id': get_random_id(), 'keyboard': keyboard_joke.get_keyboard()})

def write_history(sender, message): #–û–¢–ü–†–ê–í–ö–ê –ö–õ–ê–í–ò–ê–¢–£–†–´ –í –ë–ï–°–ï–î–£ –°–¢–†–ê–®–ù–ê–Ø –ò–°–¢–û–†–ò–Ø
	vk_session.method('messages.send', {'chat_id': sender, 'message': message, 'random_id': get_random_id(), 'keyboard': keyboard_history.get_keyboard()})

def write_citat(sender, message): #–û–¢–ü–†–ê–í–ö–ê –ö–õ–ê–í–ò–ê–¢–£–†–´ –í –ë–ï–°–ï–î–£ –¶–ò–¢–ê–¢–ê
	vk_session.method('messages.send', {'chat_id': sender, 'message': message, 'random_id': get_random_id(), 'keyboard': keyboard_citat.get_keyboard()})

def write_balance(sender, message): #–û–¢–ü–†–ê–í–ö–ê –ö–õ–ê–í–ò–ê–¢–£–†–´ –í –ë–ï–°–ï–î–£ –ë–ê–õ–ê–ù–°
	vk_session.method('messages.send', {'chat_id': sender, 'message': message, 'random_id': get_random_id(), 'keyboard': keyboard_balance.get_keyboard()})

def write_gethelp(sender, message): #–û–¢–ü–†–ê–í–ö–ê –ö–õ–ê–í–ò–ê–¢–£–†–´ –í –ë–ï–°–ï–î–£ –§–ò–ù–ê–ù–°–û–í–ê–Ø –ü–û–ú–û–©–¨
	vk_session.method('messages.send', {'chat_id': sender, 'message': message, 'random_id': get_random_id(), 'keyboard': keyboard_gethelp.get_keyboard()})

def write_joke2(sender, message): #–û–¢–ü–†–ê–í–ö–ê –ö–õ–ê–í–ò–ê–¢–£–†–´ –í –õ–° –ê–ù–ï–ö–î–û–¢
	vk_session.method('messages.send', {'user_id': sender, 'message': message, 'random_id': get_random_id(), 'keyboard': keyboard_joke.get_keyboard()})

def write_history2(sender, message): #–û–¢–ü–†–ê–í–ö–ê –ö–õ–ê–í–ò–ê–¢–£–†–´ –í –õ–° –°–¢–†–ê–®–ù–ê–Ø –ò–°–¢–û–†–ò–Ø
	vk_session.method('messages.send', {'user_id': sender, 'message': message, 'random_id': get_random_id(), 'keyboard': keyboard_history.get_keyboard()})

def write_citat2(sender, message): #–û–¢–ü–†–ê–í–ö–ê –ö–õ–ê–í–ò–ê–¢–£–†–´ –í –õ–° –¶–ò–¢–ê–¢–ê
	vk_session.method('messages.send', {'user_id': sender, 'message': message, 'random_id': get_random_id(), 'keyboard': keyboard_citat.get_keyboard()})

def write_balance2(sender, message): #–û–¢–ü–†–ê–í–ö–ê –ö–õ–ê–í–ò–ê–¢–£–†–´ –í –ë–ï–°–ï–î–£ –ë–ê–õ–ê–ù–°
	vk_session.method('messages.send', {'user_id': sender, 'message': message, 'random_id': get_random_id(), 'keyboard': keyboard_balance.get_keyboard()})

def write_gethelp2(sender, message): #–û–¢–ü–†–ê–í–ö–ê –ö–õ–ê–í–ò–ê–¢–£–†–´ –í –ë–ï–°–ï–î–£ –§–ò–ù–ê–ù–°–û–í–ê–Ø –ü–û–ú–û–©–¨
	vk_session.method('messages.send', {'user_id': sender, 'message': message, 'random_id': get_random_id(), 'keyboard': keyboard_gethelp.get_keyboard()})



def covid2(): #–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–µ –≤ –õ–°

	try:

		res = api.get_stats()
		ru = api.filter_by_country("russia")
		write_message2(sender, "‚ö†–ü–æ–¥–æ–∂–¥–∏—Ç–µ...")
		cov0 = '''
		ü¶†–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–ª—É—á–∞–µ–≤ –∑–∞—Ä–∞–∂–µ–Ω–∏—è –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–æ–ºü¶†
		'''
		cov11 = "\nüåê–í –º–∏—Ä–µ:"
		
		cov1 = "\nü§í" + "–ó–∞—Ä–∞–∂–µ–Ω–∏–π: " + str(res['confirmed'])
		cov2 = "\n‚ò†" + "–°–º–µ—Ä—Ç–µ–π: " + str(res['deaths'])
		cov3 = "\nüíä" + "–í—ã–∑–¥–æ—Ä–æ–≤–ª–µ–Ω–∏–π: " + str(res['recovered'])
		cov4 = "\n "
		cov5 = "\nüá∑üá∫–í –†–æ—Å—Å–∏–∏:"
		cov6 = "\nü§í" + "–ó–∞—Ä–∞–∂–µ–Ω–∏–π: " + str(ru['confirmed'])
		cov7 = "\n‚ò†" + "–°–º–µ—Ä—Ç–µ–π: " + str(ru['deaths'])
		cov8 = "\nüíä" + "–í—ã–∑–¥–æ—Ä–æ–≤–ª–µ–Ω–∏–π: " + str(ru['recovered'])
		cov9 = '''
		‚ö†–í —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –≤ –≤–∞—à–µ–π –º–µ—Å—Ç–Ω–æ—Å—Ç–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ COVID-19, —Å–æ–±–ª—é–¥–∞–π—Ç–µ –ø—Ä–æ—Å—Ç—ã–µ –º–µ—Ä—ã –ø—Ä–µ–¥–æ—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç–∏: –¥–µ—Ä–∂–∏—Ç–µ—Å—å –Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏ –æ—Ç –æ–∫—Ä—É–∂–∞—é—â–∏—Ö, –Ω–æ—Å–∏—Ç–µ –º–∞—Å–∫—É, —Ö–æ—Ä–æ—à–æ –ø—Ä–æ–≤–µ—Ç—Ä–∏–≤–∞–π—Ç–µ –ø–æ–º–µ—â–µ–Ω–∏—è, –∏–∑–±–µ–≥–∞–π—Ç–µ –º–µ—Å—Ç —Å–∫–æ–ø–ª–µ–Ω–∏—è –ª—é–¥–µ–π, –º–æ–π—Ç–µ —Ä—É–∫–∏ –∏ –ø—Ä–∏–∫—Ä—ã–≤–∞–π—Ç–µ –Ω–æ—Å –∏ —Ä–æ—Ç —Å–≥–∏–±–æ–º –ª–æ–∫—Ç—è –∏–ª–∏ —Å–∞–ª—Ñ–µ—Ç–∫–æ–π –ø—Ä–∏ –∫–∞—à–ª–µ –∏–ª–∏ —á–∏—Ö–∞–Ω–∏–∏. –°–ª–µ–¥–∏—Ç–µ –∑–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ –¥–ª—è –≤–∞—à–µ–≥–æ –Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞ –∏ –º–µ—Å—Ç–∞ —Ä–∞–±–æ—Ç—ã. –ë–µ—Ä–∏–≥–∏—Ç–µ —Å–µ–±—è!
		'''
		cov = cov0 + cov11 + cov1 + cov2 + cov3 + cov4 + cov5 + cov6 + cov7 + cov8 + cov9

	except:

		write_message2(sender, "‚ö†–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.")

	else:

		write_message2(sender, cov)

def covid2(): #–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–µ –≤ –ë–ï–°–ï–î–ï

	try:

		res = api.get_stats()
		ru = api.filter_by_country("russia")
		write_message(sender, "‚ö†–ü–æ–¥–æ–∂–¥–∏—Ç–µ...")
		cov0 = '''
		ü¶†–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–ª—É—á–∞–µ–≤ –∑–∞—Ä–∞–∂–µ–Ω–∏—è –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–æ–ºü¶†
		'''
		cov11 = "\nüåê–í –º–∏—Ä–µ:"
		
		cov1 = "\nü§í" + "–ó–∞—Ä–∞–∂–µ–Ω–∏–π: " + str(res['confirmed'])
		cov2 = "\n‚ò†" + "–°–º–µ—Ä—Ç–µ–π: " + str(res['deaths'])
		cov3 = "\nüíä" + "–í—ã–∑–¥–æ—Ä–æ–≤–ª–µ–Ω–∏–π: " + str(res['recovered'])
		cov4 = "\n "
		cov5 = "\nüá∑üá∫–í –†–æ—Å—Å–∏–∏:"
		cov6 = "\nü§í" + "–ó–∞—Ä–∞–∂–µ–Ω–∏–π: " + str(ru['confirmed'])
		cov7 = "\n‚ò†" + "–°–º–µ—Ä—Ç–µ–π: " + str(ru['deaths'])
		cov8 = "\nüíä" + "–í—ã–∑–¥–æ—Ä–æ–≤–ª–µ–Ω–∏–π: " + str(ru['recovered'])
		cov9 = '''
		‚ö†–í —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –≤ –≤–∞—à–µ–π –º–µ—Å—Ç–Ω–æ—Å—Ç–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ COVID-19, —Å–æ–±–ª—é–¥–∞–π—Ç–µ –ø—Ä–æ—Å—Ç—ã–µ –º–µ—Ä—ã –ø—Ä–µ–¥–æ—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç–∏: –¥–µ—Ä–∂–∏—Ç–µ—Å—å –Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏ –æ—Ç –æ–∫—Ä—É–∂–∞—é—â–∏—Ö, –Ω–æ—Å–∏—Ç–µ –º–∞—Å–∫—É, —Ö–æ—Ä–æ—à–æ –ø—Ä–æ–≤–µ—Ç—Ä–∏–≤–∞–π—Ç–µ –ø–æ–º–µ—â–µ–Ω–∏—è, –∏–∑–±–µ–≥–∞–π—Ç–µ –º–µ—Å—Ç —Å–∫–æ–ø–ª–µ–Ω–∏—è –ª—é–¥–µ–π, –º–æ–π—Ç–µ —Ä—É–∫–∏ –∏ –ø—Ä–∏–∫—Ä—ã–≤–∞–π—Ç–µ –Ω–æ—Å –∏ —Ä–æ—Ç —Å–≥–∏–±–æ–º –ª–æ–∫—Ç—è –∏–ª–∏ —Å–∞–ª—Ñ–µ—Ç–∫–æ–π –ø—Ä–∏ –∫–∞—à–ª–µ –∏–ª–∏ —á–∏—Ö–∞–Ω–∏–∏. –°–ª–µ–¥–∏—Ç–µ –∑–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ –¥–ª—è –≤–∞—à–µ–≥–æ –Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞ –∏ –º–µ—Å—Ç–∞ —Ä–∞–±–æ—Ç—ã. –ë–µ—Ä–∏–≥–∏—Ç–µ —Å–µ–±—è!
		'''
		cov = cov0 + cov11 + cov1 + cov2 + cov3 + cov4 + cov5 + cov6 + cov7 + cov8 + cov9

	except:

		write_message(sender, "‚ö†–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.")

	else:

		write_message(sender, cov)

token="f4a8b4fc8fe0aa8e080fc21186f5606bd26e26f6429715472af9e201254862bf07c4cec92858e0d40558a"  #–¢–û–ö–ï–ù –ì–†–£–ü–ü–´

vk_session = VkApi(token = token)

longpoll = VkBotLongPoll(vk_session, 197481314)

longpollbot = True

#–ü–û–ì–û–î–ê
config_dict = get_default_config()
config_dict['language'] = 'ru'
owm = OWM('1ad03b7000a938a954739c5d5d77e6f2', config_dict)

mgr =  owm.weather_manager() #–ü–û–ì–û–î–ê

api = CovId19Data(force=True) #–ö–û–†–û–ù–ê–í–ò–†–£–°


while longpollbot:

	try:
	



		for event in longpoll.listen():


		    if event.type == VkBotEventType.MESSAGE_NEW:

		    	if event.from_chat and event.message and event.message.get('text'):  #–ï–°–õ–ò –ù–ê–ü–ò–°–ê–õ–ò –í –ß–ê–¢–ï

		    		reseived_message = event.message.get("text")
		    		sender = event.chat_id

		    		if "—Å–ª–µ–¥—É—é—â–∏–π –∞–Ω–µ–∫–¥–æ—ÇüòÇ" in reseived_message.lower():
	    				f = open('joke.txt', 'r+')
		    			a = f.readlines()
		    			joke = random.choice(a)
		    			write_joke(sender, joke)
		    			f.close()

		    		elif "—Å–ª–µ–¥—É—é—â–∞—è –∏—Å—Ç–æ—Ä–∏—èüò±" in reseived_message.lower():
	    				story = random.choice(history_list_bot)
	    				write_history(sender, story)

	    			elif "—Å–ª–µ–¥—É—é—â–∞—è —Ü–∏—Ç–∞—Ç–∞üìï" in reseived_message.lower():
    					CITAT = 'https://citatnica.ru/citaty/samye-luchshie-tsitaty'
	    				headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.102 YaBrowser/20.9.1.110 Yowser/2.5 Safari/537.36'}
	    				full_page = requests.get(CITAT, headers=headers)
	    				soup = BeautifulSoup(full_page.content, 'html.parser')
	    				convertd = soup.findAll("div", {"class": "su-note"})
	    				a = random.choice(convertd)
	    				a = a.text
	    				write_citat(sender, a)

    				elif "–±–∞–ª–∞–Ω—Åüí∞" in reseived_message.lower() or reseived_message.lower() == "/–±–∞–ª–∞–Ω—Å": #–ë–ê–õ–ê–ù–°
			    		iduser = event.message.get("from_id")
		    			user = vk_session.method("users.get", {"user_ids": iduser})
		    			name = user[0]['first_name']

		    			f = open('Balance.txt', 'r+')
		    			balance = f.readlines()
		    			id_user = False

		    			for b in balance:

		    				if str(iduser) in b:
		    					a = b.split(" ", 1)
		    					b = a[1]
		    					iduser = name + ", " + " –≤–∞—à –±–∞–ª–∞–Ω—Åüí∞: " + str(b) + "üí≤"
		    					id_user = True
		    					write_balance(sender, iduser)

		    					if int(b) == 0:
		    						a = name + ", " + "üë©‚Äçüíº–≤—ã —Å—Ç–∞–ª–∏ –±–∞–Ω–∫—Ä–æ—Ç–æ–º? –ü–æ–ª—É—á–∏—Ç–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –ø–æ–º–æ—â—åüí∞ –≤ —Ä–∞–∑–º–µ—Ä–µ 50000üí≤"
		    						write_gethelp(sender, a)

		    			if id_user == False:

		    				balance = "50000"
		    				id_user = "\n" + str(iduser) + " " + balance
		    				f.write(id_user)
		    				iduser = name + ", " + " –≤–∞—à –±–∞–ª–∞–Ω—Åüí∞: " + str(balance) + "üí≤"
		    				write_balance(sender, iduser)

		    			if id_user == True:

		    				id_user = False

		    			f.close()

	    			elif reseived_message.lower() == "/–±–æ–Ω—É—Å" or "–±–æ–Ω—É—ÅüéÅ" in reseived_message.lower(): #–ë–û–ù–£–°
		    			f = open('Bonus.txt', 'r+')
		    			balance = f.readlines()
		    			id_user = False
		    			iduser = event.message.get("from_id")
		    			user = vk_session.method("users.get", {"user_ids": iduser})
		    			name = user[0]['first_name']

		    			for b in balance:
		    				if str(iduser) in b:
		    					a = name + ", " + "üë©‚Äçüíº–≤—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ —Å–≤–æ–π –±–æ–Ω—É—ÅüéÅ –≤ —Ä–∞–∑–º–µ—Ä–µ 1.000.000üí≤"
		    					write_message(sender, a)
		    					id_user = True
		    					f.close()

		    			if id_user == False:
		    				i = "\n" + str(iduser)
		    				f.write(i)
		    				f.close()
		    				f = open('Balance.txt', 'r')
		    				balance = f.readlines()
		    				id_user2 = False

		    				for b in balance:
		    					if str(iduser) in b:
		    						index = balance.index(b) #–ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–∞ —Å—Ç—Ä–æ–∫–∏
		    						x = b.split(" ", 1)
		    						x = x[1]
		    						id_user2 = True
		    						balance_new = int(x) + 1000000
		    						balance_new2 = str(iduser) + " " + str(balance_new)
		    						del balance[index]
		    						balance.append(balance_new2)
		    						f.close()
		    						f = open('Balance.txt', 'w')
		    						f.writelines(balance)
		    						f.close()
		    						a = name + ", " + "üë©‚Äçüíº–≤—ã –ø–æ–ª—É—á–∏–ª–∏ —Å–≤–æ–π –±–æ–Ω—É—ÅüéÅ –≤ —Ä–∞–∑–º–µ—Ä–µ 1.000.000üí≤"
		    						write_balance(sender, a)

		    				if id_user2 == False:
		    					f = open('Balance.txt', 'r+')
		    					balance_new = "\n" + str(iduser) + " " + str(1050000)
		    					f.write(balance_new)
		    					f.close()
		    					a = name + ", " + "üë©‚Äçüíº–≤—ã –ø–æ–ª—É—á–∏–ª–∏ —Å–≤–æ–π –±–æ–Ω—É—ÅüéÅ –≤ —Ä–∞–∑–º–µ—Ä–µ 1.000.000üí≤"
		    					write_balance(sender, a)
		    				
		    				id_user2 = False



	    			elif "–ø–æ–ª—É—á–∏—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –ø–æ–º–æ—â—åüí∞" in reseived_message.lower() or reseived_message.lower() == "/–ø–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å": #–§–ò–ù–ê–ù–°–û–í–ê–Ø –ü–û–ú–û–©–¨
		    			f = open('Balance.txt', 'r')
		    			balance = f.readlines()
		    			id_user = False
		    			iduser = event.message.get("from_id")
		    			user = vk_session.method("users.get", {"user_ids": iduser})
		    			name = user[0]['first_name']

		    			for b in balance:
		    				if str(iduser) in b:
		    					index = balance.index(b) #–ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–∞ —Å—Ç—Ä–æ–∫–∏
		    					x = b.split(" ", 1)
		    					x = x[1]
		    					id_user = True

		    					if int(x) == 0:

		    						index = balance.index(b)
		    						del balance[index]
		    						balance_new = str(iduser) + " " + str(50000)
		    						balance.append(balance_new)
		    						f.close()
		    						f = open('Balance.txt', 'w')
		    						f.writelines(balance)
		    						f.close()
		    						gethelp = name + ", " + "üë©‚Äçüíº–≤—ã –ø–æ–ª—É—á–∏–ª–∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –ø–æ–º–æ—â—åüí∞ –≤ —Ä–∞–∑–º–µ—Ä–µ 50000üí≤"
		    						write_balance(sender, gethelp)

		    					if int(x) > 0:
		    						a = name + ", " + "üë©‚Äçüíº–º—ã –Ω–µ –º–æ–∂–µ–º –æ–∫–∞–∑–∞—Ç—å –≤–∞–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É, —Ç–∞–∫ –∫–∞–∫ –Ω–∞ –≤–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ –µ—Å—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞."
		    						write_message(sender, a)

		    			if id_user == False:
		    				f.close()
		    				f = open('Balance.txt', 'r+')
		    				balance_new = "\n" + str(iduser) + " " + str(50000)
		    				f.write(balance_new)
		    				gethelp = name + ", " + "üë©‚Äçüíº–º—ã –Ω–µ –º–æ–∂–µ–º –æ–∫–∞–∑–∞—Ç—å –≤–∞–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É, —Ç–∞–∫ –∫–∞–∫ –Ω–∞ –≤–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ –µ—Å—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞."
		    				write_message(sender, gethelp)



		    		

		    		







		    		#–ö–û–ú–ê–ù–î–´ –ú–û–ñ–ù–û –ü–ò–°–ê–¢–¨, –ë–ï–ó –û–ë–†–ê–©–ï–ù–ò–Ø –ö –ë–û–¢–£

		    		elif "/" in reseived_message.lower()[0]:
		    			reseived_message_new = reseived_message.lower().split("/", 1)
		    			index = reseived_message_new[1]

		    			if index == "—ç–¥–≤–∞—Ä–¥" or index == "–µ–¥–≤–∞—Ä–¥" or index == "–±–æ—Ç" or index == "edward":
			    			bot = random.choice(user_bot_list)
			    			write_message(sender, bot)

			    		elif index == "help!":
			    			write_message(sender, help_list_bot2)

			    		elif index == "–¥–∞" or index == "–¥–∞." or index == "–¥–∞!" or index == "–¥–∞?" or index == "–¥–∞,": #–î–ê
		    				yes = random.choice(yes_list_bot)
		    				write_message(sender, yes)

		    			elif index == "–Ω–µ—Ç" or index == "–Ω–µ—Ç." or index == "–Ω–µ—Ç!" or index == "–Ω–µ—Ç?" or index == "–Ω–µ—Ç," or index == "–Ω–µ" or index == "–Ω–µ." or index == "–Ω–µ," or index == "–Ω–µ!" or index == "–Ω–µ?": #–ù–ï–¢
		    				no = random.choice(no_list_bot)
		    				write_message(sender, no)


			    		elif index in id_list: #–ö–û–ú–ê–ù–î–ê –ê–ô–î–ò
			    			iduser = event.message.get("from_id")
			    			user = vk_session.method("users.get", {"user_ids": iduser})
			    			name = user[0]['first_name']
			    			write_message(sender, "‚åõ–ü–æ–¥–æ–∂–¥–∏—Ç–µ...")
			    			iduser = name + ", " + " –≤–∞—à üÜî: " + str(iduser)
			    			write_message(sender, iduser)

			    		

			    		elif index == "covid" or index == "–∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å" or index == "covid19" or index == "–∫–æ–≤–∏–¥": #–ö–û–†–û–ù–ê–í–ò–†–£–°
			    			covid2()



			    		elif index in hello_list_user:
			    			hello = random.choice(hello_list_bot)
			    			write_message(sender, hello)

			    		elif index in help_list_user: #—Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
			    			write_message(sender, help_list_bot)

			    		elif index in joke_list_user: #–ê–ù–ï–ö–î–û–¢
			    			f = open('joke.txt', 'r+')
			    			a = f.readlines()
			    			joke = random.choice(a)
			    			write_joke(sender, joke)
			    			f.close()

		    			elif index in cicat_list_user: #–¶–ò–¢–ê–¢–ê
		    				CITAT = 'https://citatnica.ru/citaty/samye-luchshie-tsitaty'
		    				headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.102 YaBrowser/20.9.1.110 Yowser/2.5 Safari/537.36'}
		    				full_page = requests.get(CITAT, headers=headers)
		    				soup = BeautifulSoup(full_page.content, 'html.parser')
		    				convertd = soup.findAll("div", {"class": "su-note"})
		    				a = random.choice(convertd)
		    				a = a.text
		    				write_citat(sender, a)



			    		elif index == "—à–∞—Ä":  #–ö–û–ú–ê–ù–î–ê –®–ê–†
			    			write_message(sender, "‚ö†–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /—à–∞—Ä [—Ñ—Ä–∞–∑–∞]")


				    	elif "—à–∞—Ä " in index and not index == "—à–∞—Ä":
				    		ball = random.choice(ball_list)
				    		write_message(sender, "üîÆ")
				    		write_message(sender, ball)






			    		elif "–≤—ã–±–µ—Ä–∏ " in index:    #–ö–û–ú–ê–ù–î–ê –í–´–ë–ï–†–ò
			    			reseived_message_new = index.lower().split("–≤—ã–±–µ—Ä–∏ ", 1)
			    			index = reseived_message_new[1].split(" –∏–ª–∏ ")
			    			index1 = index[0]
			    			index2 = index[1]
			    			if "?" in index2 or "." in index2 or "!" in index2 or "," in index2:
			    				index2 = list(index2)
			    				index2.pop()
			    				index_new = index2
			    				index2 = ''.join(index_new)
			    				index = [index1, index2]
			    				message = random.choice(index)
			    				write_message(sender, message)
			    			else:
			    				index = [index1, index2]
			    				message = random.choice(index)
			    				write_message(sender, message)




			    		elif index in history_list_user: #–ñ–£–¢–ö–ê–Ø –ò–°–¢–û–†–ò–Ø
			    			story = random.choice(history_list_bot)
			    			write_history(sender, story)




			    		elif index == "–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å" or index == "–∏–Ω—Ñ–∞": #–í–ï–†–û–Ø–¢–ù–û–°–¢–¨
			    			infa = random.choice(infa_list_bot)
			    			write_message(sender, infa)

			    		elif ("–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å " in index or "–∏–Ω—Ñ–∞ " in index) and not (index == "–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å" or index == "–∏–Ω—Ñ–∞"):
			    			reseived_message_new = index.lower().split(" ", 1)
			    			index = reseived_message_new[1]
			    			index = list(index)
			    			if "?" in index or "." in index or "!" in index:
			    				index.pop()
			    				index_new = index
			    				index = ''.join(index_new)
			    				infa = random.choice(infa_list_bot)
			    				message = "–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Ç–æ–≥–æ, —á—Ç–æ " + index + ", —Ä–∞–≤–Ω–∞: " + infa
			    				write_message(sender, message)
			    			else:
			    				index = ''.join(index)
			    				infa = random.choice(infa_list_bot)
			    				message = "–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Ç–æ–≥–æ, —á—Ç–æ " + index + ", —Ä–∞–≤–Ω–∞: " + infa
			    				write_message(sender, message)




			    		elif "flip " in index and not index == "flip":    #–ö–û–ú–ê–ù–î–ê /FLIP
			    			reseived_message_new = index.lower().split(" ", 1)
			    			index = reseived_message_new[1]
			    			flip = index[::-1]
			    			write_message(sender, "üîÅ–ü–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞—é...")
			    			write_message(sender, flip)

			    		elif index == "flip":
			    			write_message(sender, "‚ö†–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /flip [—Ñ—Ä–∞–∑–∞]")





			    		elif index == "–ø–æ–≥–æ–¥–∞": #–ü–û–ì–û–î–ê
			    			write_message(sender, "‚ö†–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /–ø–æ–≥–æ–¥–∞ [–≥–æ—Ä–æ–¥]")

			    		elif "–ø–æ–≥–æ–¥–∞ " in index and not index == "–ø–æ–≥–æ–¥–∞": #–ü–û–ì–û–î–ê

			    			try:

				    			reseived_message_new = index.lower().split(" ", 1)
				    			city = reseived_message_new[1]
				    			observation = mgr.weather_at_place(city)
				    			weather = observation.weather
				    			a = weather.detailed_status
				    			temp = weather.temperature('celsius')['temp']
				    			wind = observation.weather.wind()['speed']
				    			weather1 = '''
				    			üå•–ü–æ–≥–æ–¥–∞üå•
				    			'''
				    			weathercity = "\nüèõ–í –≥–æ—Ä–æ–¥–µ —Å–µ–π—á–∞—Å " + a + "."
				    			down1 = '''
				    			'''
				    			cels = "\nüå°–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –≥–æ—Ä–æ–¥–µ " + city + " –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ —Ä–∞–≤–Ω–∞ " + str(temp) + "¬∞ –≥—Ä–∞–¥—É—Å–æ–≤."
				    			down2 = '''
				    			'''
				    			wind1 = "\nüí®–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ " + str(wind) + " –º/—Å."
				    			message = weather1 + weathercity + down1 + cels + down2 + wind1

				    		except:

				    			write_message(sender, "‚ö†–¢–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")

				    		else:

				    			write_message(sender, message)


			    		elif "–≤–∏–∫–∏ " in index or "–≤–∏–∫–∏–ø–µ–¥–∏—è " in index: #–ö–û–ú–ê–ù–î–ê –í–ò–ö–ò

			    			try:

				    			reseived_message_new = index.lower().split(" ", 1)
				    			index = reseived_message_new[1]
				    			write_message(sender, "‚åõ–ü–æ–¥–æ–∂–¥–∏—Ç–µ...")
				    			wikipedia.set_lang('ru')
				    			wiki = wikipedia.summary(index)

				    		except:

				    			write_message(sender, "‚ö†–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.")

				    		else:

				    			write_message(sender, wiki)


			    		elif "–ø–µ—Ä–µ–≤–æ–¥ " in index or "–ø–µ—Ä–µ–≤–µ–¥–∏ " in index: #–ö–û–ú–ê–ù–î–ê –ü–ï–†–ï–í–û–î–ê

			    			try:

				    			reseived_message_new = index.lower().split(" ", 1)
				    			index = reseived_message_new[1]
				    			write_message(sender, "‚åõ–ü–æ–¥–æ–∂–¥–∏—Ç–µ...")
				    			translator= Translator(to_lang="ru")
				    			translation = translator.translate(index)

				    		except:

				    			write_message(sender, "‚ö†–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥.")

				    		else: 

		    					write_message(sender, translation)




			    		elif index == "idc":
			    			idc = event.chat_id
			    			idc = "–ê–π–¥–∏ –±–µ—Å–µ–¥—ãüÜî: " + str(idc)
			    			write_message(sender, "‚åõ–ü–æ–¥–æ–∂–¥–∏—Ç–µ...")
			    			write_message(sender, idc)


			    		elif index in mates_list_user:
			    			r = [True, False, False]
			    			r = random.choice(r)
			    			if r == True:
			    				r = "–°–∞–º " + index
			    				write_message(sender, r)
			    			elif r == False:
				    			mat = random.choice(mates_list_bot)
				    			write_message(sender, mat)



				    	elif index == "ed": #–ö–û–ú–ê–ù–î–ê /ed
				    		write_message(sender, "‚ö†–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /ed [–Ω–∞–∑–≤–∞–Ω–∏–µ]")

				    	elif "ed " in index and not index == "ed":
				    		reseived_message_new = index.split(" ", 1)
				    		title = reseived_message_new[1]
				    		ids = event.chat_id
				    		write_message(sender, "‚åõ–ü–æ–¥–æ–∂–¥–∏—Ç–µ...")
				    		edit_chat(ids, title)

				    	elif index == "–∫—Ç–æ":
				    		ids = event.chat_id
				    		idc = 2000000000 + ids
				    		members_chat(idc)

				    		write_message(sender, count)


				    	elif index == "vs":
			    			write_message(sender, "‚ö†–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /vs [–ø—Ä–æ—Ç–∏–≤–Ω–∏–∫] –ø—Ä–æ—Ç–∏–≤ [–ø—Ä–æ—Ç–∏–≤–Ω–∏–∫2]")



				    	elif "vs " in index: #–ö–û–ú–ê–ù–î–ê /VS
				    		reseived_message_new = index.split("vs ", 1)
				    		reseived_message_new2 = reseived_message_new[1]
				    		index = reseived_message_new2.split(" –ø—Ä–æ—Ç–∏–≤ ", 1)
				    		index1 = index[0]
				    		index2 = index[1]
				    		damage1 = [15, 30, 35]
				    		damage2 = [40, 45, 50]
				    		damage_list = ["–Ω–∞–Ω–æ—Å–∏—Ç —É—Ä–æ–Ω", "–Ω–∞–Ω–æ—Å–∏—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–Ω"]
				    		protection = "–∑–∞—â–∏—Ç–∏–ª—Å—è(–∞—Å—å) –æ—Ç —É—Ä–æ–Ω–∞"
				    		protection_tf = [True, False, False]
				    		write_message(sender, "–ë–æ–π –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è!")
				    		vs = True
				    		life1 = 100
				    		life2 = 100

				    		while vs == True:

				    			score = "üë§" + index1 + " " + "[" + str(life1) + "]" + "üÜö" + "[" + str(life2) + "]" + " " + index2 + "üë§"
				    			write_message(sender, score)
				    			damagelist = random.choice(damage_list)
				    			batle = index1 + " " + damagelist
				    			write_message(sender, batle)
				    			protect = random.choice(protection_tf)

				    			if damagelist == "–Ω–∞–Ω–æ—Å–∏—Ç —É—Ä–æ–Ω" and protect == False:
				    				damage = random.choice(damage1)
				    				life = life2 - damage
				    				life2 = life
				    				score = "üë§" + index1 + " " + "[" + str(life1) + "]" + "üÜö" + "[" + str(life2) + "]" + " " + index2 + "üë§"

				    				if life2 > 0:
				    					write_message(sender, score)
				    					damagelist = random.choice(damage_list)
				    					batle = index2 + " " + damagelist
				    					write_message(sender, batle)

				    					if damagelist == "–Ω–∞–Ω–æ—Å–∏—Ç —É—Ä–æ–Ω" and protect == False:
				    						damage = random.choice(damage1)
				    						life = life1 - damage
				    						life1 = life

				    						if life1 <= 0:
				    							vs = False
				    							life1 = 0
				    							score = "üë§" + index1 + " " + "[" + str(life1) + "]" + "üÜö" + "[" + str(life2) + "]" + " " + index2 + "üë§"
				    							write_message(sender, score)
				    							win = "üèÜ" + index2 + " " + "–ø–æ–±–µ–¥–∏–ª!" + "üèÜ"
				    							write_message(sender, win)
				    							life1 = 100
				    							life2 = 100

				    					elif damagelist == "–Ω–∞–Ω–æ—Å–∏—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–Ω" and protect == False:
				    						damage = random.choice(damage2)
				    						life = life1 - damage
				    						life1 = life

				    						if life1 <= 0:
				    							vs = False
				    							life1 = 0
				    							score = "üë§" + index1 + " " + "[" + str(life1) + "]" + "üÜö" + "[" + str(life2) + "]" + " " + index2 + "üë§"
				    							write_message(sender, score)
				    							win = "üèÜ" + index2 + " " + "–ø–æ–±–µ–¥–∏–ª!" + "üèÜ"
				    							write_message(sender, win)
				    							life1 = 100
				    							life2 = 100

				    					elif protect == True:
				    						batle = index1 + " " + "–∑–∞—â–∏—Ç–∏–ª—Å—è(–∞—Å—å) –æ—Ç —É—Ä–æ–Ω–∞"
				    						write_message(sender, batle)

				    				elif life2 <= 0:
				    					vs = False
				    					life2 = 0
				    					score = "üë§" + index1 + " " + "[" + str(life1) + "]" + "üÜö" + "[" + str(life2) + "]" + " " + index2 + "üë§"
				    					write_message(sender, score)
				    					win = "üèÜ" + index1 + " " + "–ø–æ–±–µ–¥–∏–ª!" + "üèÜ"
				    					write_message(sender, win)
				    					life1 = 100
				    					life2 = 100

				    			elif damagelist == "–Ω–∞–Ω–æ—Å–∏—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–Ω" and protect == False:
				    				damage = random.choice(damage2)
				    				life = life2 - damage
				    				life2 = life
				    				score = "üë§" + index1 + " " + "[" + str(life1) + "]" + "üÜö" + "[" + str(life2) + "]" + " " + index2 + "üë§"

				    				if life2 > 0:
				    					write_message(sender, score)
				    					damagelist = random.choice(damage_list)
				    					batle = index2 + " " + damagelist
				    					write_message(sender, batle)

				    					if damagelist == "–Ω–∞–Ω–æ—Å–∏—Ç —É—Ä–æ–Ω" and protect == False:
				    						damage = random.choice(damage1)
				    						life = life1 - damage
				    						life1 = life

				    						if life1 <= 0:
				    							vs = False
				    							life1 = 0
				    							score = "üë§" + index1 + " " + "[" + str(life1) + "]" + "üÜö" + "[" + str(life2) + "]" + " " + index2 + "üë§"
				    							write_message(sender, score)
				    							win = "üèÜ" + index2 + " " + "–ø–æ–±–µ–¥–∏–ª!" + "üèÜ"
				    							write_message(sender, win)
				    							life1 = 100
				    							life2 = 100

				    					elif damagelist == "–Ω–∞–Ω–æ—Å–∏—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–Ω" and protect == False:
				    						damage = random.choice(damage2)
				    						life = life1 - damage
				    						life1 = life

				    						if life1 <= 0:
				    							vs = False
				    							life1 = 0
				    							score = "üë§" + index1 + " " + "[" + str(life1) + "]" + "üÜö" + "[" + str(life2) + "]" + " " + index2 + "üë§"
				    							write_message(sender, score)
				    							win = "üèÜ" + index2 + " " + "–ø–æ–±–µ–¥–∏–ª!" + "üèÜ"
				    							write_message(sender, win)
				    							life1 = 100
				    							life2 = 100

				    					elif protect == True:
				    						batle = index1 + " " + "–∑–∞—â–∏—Ç–∏–ª—Å—è(–∞—Å—å) –æ—Ç —É—Ä–æ–Ω–∞"
				    						write_message(sender, batle)

				    				elif life2 <= 0:
				    					vs = False
				    					life2 = 0
				    					score = "üë§" + index1 + " " + "[" + str(life1) + "]" + "üÜö" + "[" + str(life2) + "]" + " " + index2 + "üë§"
				    					write_message(sender, score)
				    					win = "üèÜ" + index1 + " " + "–ø–æ–±–µ–¥–∏–ª!" + "üèÜ"
				    					write_message(sender, win)
				    					life1 = 100
				    					life2 = 100

				    			elif protect == True:
				    				batle = index2 + " " + "–∑–∞—â–∏—Ç–∏–ª—Å—è(–∞—Å—å) –æ—Ç —É—Ä–æ–Ω–∞"
				    				write_message(sender, batle)
				    				damagelist = random.choice(damage_list)
				    				batle = index2 + " " + damagelist
				    				protect = random.choice(protection_tf)
				    				write_message(sender, batle)

				    				if damagelist == "–Ω–∞–Ω–æ—Å–∏—Ç —É—Ä–æ–Ω" and protect == False:
				    					damage = random.choice(damage1)
				    					life = life1 - damage
				    					life1 = life

				    					if life1 <= 0:
				    						vs = False
				    						life1 = 0
				    						score = "üë§" + index1 + " " + "[" + str(life1) + "]" + "üÜö" + "[" + str(life2) + "]" + " " + index2 + "üë§"
				    						write_message(sender, score)
				    						win = "üèÜ" + index2 + " " + "–ø–æ–±–µ–¥–∏–ª!" + "üèÜ"
				    						write_message(sender, win)
				    						life1 = 100
				    						life2 = 100

				    				elif damagelist == "–Ω–∞–Ω–æ—Å–∏—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–Ω" and protect == False:
				    					damage = random.choice(damage2)
				    					life = life1 - damage
				    					life1 = life

				    					if life1 <= 0:
				    						vs = False
				    						life1 = 0
				    						score = "üë§" + index1 + " " + "[" + str(life1) + "]" + "üÜö" + "[" + str(life2) + "]" + " " + index2 + "üë§"
				    						write_message(sender, score)
				    						win = "üèÜ" + index2 + " " + "–ø–æ–±–µ–¥–∏–ª!" + "üèÜ"
				    						write_message(sender, win)
				    						life1 = 100
				    						life2 = 100

				    				elif protect == True:
				    					batle = index1 + " " + "–∑–∞—â–∏—Ç–∏–ª—Å—è(–∞—Å—å) –æ—Ç —É—Ä–æ–Ω–∞"
				    					write_message(sender, batle)

				    	elif "–∑–∞—á–µ–º" in index or "–ø–æ—á–µ–º—É" in index or "–Ω–∞—Ñ–∏–≥–∞" in index or "–Ω–∞—Ö—Ä–µ–Ω–∞" in index or "–Ω–∞—Ö—É—è" in index:
				    		why = random.choice(why_list_bot)
				    		write_message(sender, why)

				    	elif "–¥–µ–ª–∞" in index and "–∫–∞–∫" in index:
				    		case = random.choice(case_list_bot)
				    		write_message(sender, case)
				    		d = [True, False, False]
				    		d = random.choice(d)

				    		if d == True:
				    			case = random.choice(case_list_bot2)
				    			write_message(sender, case)

				    	elif ("–Ω–∞—Ö—É–π" in index and "–∏–¥–∏" in index) or "—Å—ä–µ–±–∞–ª" in index or "–ø–∏–∑–¥—É–π" in index or "–±–ª—è–¥—å" in index or "–ø–∏–∑–¥–µ—Ü" in index:
				    		mat = random.choice(mates_list_bot)
				    		write_message(sender, mat)

				    	elif "–∏–∑–≤–∏–Ω–∏ " in index or "–ø—Ä–æ—Å—Ç–∏" in index or index == "–∏–∑–≤–∏–Ω–∏":
				    		sorry = random.choice(sorry_bot_list)
				    		write_message(sender, sorry)

				    	elif index in answer_list_user:
				    		answer = random.choice(answer_list_bot)
				    		write_message(sender, answer)

				    	elif index == "–∫—É—Ä—Å":
					    	write_message(sender, "‚åõ–ü–æ–¥–æ–∂–¥–∏—Ç–µ...")

					    	DOLLAR_RUB = 'https://www.google.ru/search?newwindow=1&ei=X8eCX9HEC8iHwPAPwdGcEA&q=–∫—É—Ä—Å+–¥–æ–ª–ª–∞—Ä–∞&oq=–∫—É—Ä—Å+–¥–æ–ª–ª–∞—Ä–∞&gs_lcp=CgZwc3ktYWIQAzINCAAQsQMQgwEQRhCCAjIFCAAQsQMyCAgAELEDEIMBMgUIABCxAzIFCAAQsQMyCAgAELEDEIMBMgUIABCxAzIFCAAQsQMyBQgAELEDMgUIABCxAzoCCABQ6gFYhhpguxtoAHAAeAGAAdUHiAG4FJIBBTUtMS4ymAEAoAEBqgEHZ3dzLXdpesABAQ&sclient=psy-ab&ved=0ahUKEwiR8LC1lKzsAhXIAxAIHcEoBwIQ4dUDCA0&uact=5'
					    	headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.102 YaBrowser/20.9.1.110 Yowser/2.5 Safari/537.36'}
					    	full_page = requests.get(DOLLAR_RUB, headers=headers)
					    	soup = BeautifulSoup(full_page.content, 'html.parser')
					    	convertd = soup.findAll("span", {"class": "DFlfde", "class": "SwHCTb", "data-precision": 2})

					    	EURO_RUB = 'https://www.google.ru/search?newwindow=1&ei=jciCX5DlEYy53AO5t43YBg&q=–∫—É—Ä—Å+–µ–≤—Ä–æ&oq=–∫—É—Ä—Å+–µ–≤—Ä–æ&gs_lcp=CgZwc3ktYWIQAzIKCAAQsQMQRhCCAjIFCAAQsQMyBQgAELEDMgIIADIFCAAQsQMyBQgAELEDMgUIABCxAzIFCAAQsQMyAggAMgUIABCxAzoHCAAQsAMQQzoPCAAQsQMQgwEQQxBGEIICOggIABCxAxCDAToGCAAQChAqOgsIABAKECoQRhCCAjoECAAQClDxriVYz9YlYOnbJWgEcAB4A4ABsAuIAf5JkgELMi0xLjUtMS4yLjaYAQCgAQGqAQdnd3Mtd2l6yAEKwAEB&sclient=psy-ab&ved=0ahUKEwjQ37fFlazsAhWMHHcKHblbA2sQ4dUDCA0&uact=5'
					    	headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.102 YaBrowser/20.9.1.110 Yowser/2.5 Safari/537.36'}
					    	full_page = requests.get(EURO_RUB, headers=headers)
					    	soup = BeautifulSoup(full_page.content, 'html.parser')
					    	converte = soup.findAll("span", {"class": "DFlfde", "class": "SwHCTb", "data-precision": 2})

					    	BTC_RUB = 'https://www.google.ru/search?newwindow=1&ei=TtCCX7XMC-n0qwHr1rWQAg&q=–∫—É—Ä—Å+–±–∏—Ç–∫–æ–∏–Ω–∞&oq=–∫—É—Ä—Å+–±–∏—Ç–∫–æ–∏–Ω–∞&gs_lcp=CgZwc3ktYWIQAzINCAAQsQMQgwEQRhCCAjICCAAyAggAMgUIABCxAzICCAAyAggAMgIIADICCAAyAggAMgIIADoHCAAQsQMQQzoECAAQQzoKCAAQsQMQgwEQQzoICAAQsQMQgwFQsi1Y18EtYI_DLWgBcAB4AYABrwWIAbUpkgEFNC01LjWYAQCgAQGqAQdnd3Mtd2l6sAEAwAEB&sclient=psy-ab&ved=0ahUKEwi1q_T3nKzsAhVp-ioKHWtrDSIQ4dUDCA0&uact=5'
					    	headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.102 YaBrowser/20.9.1.110 Yowser/2.5 Safari/537.36'}
					    	full_page = requests.get(BTC_RUB, headers=headers)
					    	soup = BeautifulSoup(full_page.content, 'html.parser')
					    	convertb = soup.findAll("span", {"class": "DFlfde", "class": "SwHCTb", "data-precision": 2})

					    	course1 = "\nüí≤–¢–µ–∫—É—â–∏–π –∫—É—Ä—Åüí≤"
					    	course2 = "\nüíµ–î–æ–ª–ª–∞—Ä - " + str(convertd[0].text) + "‚ÇΩ"
					    	course3 = "\nüí∑–ï–≤—Ä–æ - " + str(converte[0].text) + "‚ÇΩ"
					    	course4 = "\n‚Çø–ë–∏—Ç–∫–æ–∏–Ω - " + str(convertb[0].text) + "‚ÇΩ"
					    	course = course1 + course2 + course3 + course4
					    	write_message(sender, course)

				    	 

				    	



					    

			    		elif index == "–æ—Ä–µ–ª" or index == "—Ä–µ—à–∫–∞":
			    			write_message2(sender, "‚ö†–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É [/–æ—Ä–µ–ª/—Ä–µ—à–∫–∞] [—Å—Ç–∞–≤–∫–∞]")





			    		elif "–æ—Ä–µ–ª " in index or "—Ä–µ—à–∫–∞ " in index: #–û–†–ï–õ –ò–õ–ò –†–ï–®–ö–ê
			    			iduser = event.message.get("from_id")
			    			user = vk_session.method("users.get", {"user_ids": iduser})
			    			name = user[0]['first_name']

			    			try:
			    			
			    				al = index.split(" ", 1)
			    				a1 = al[0]
			    				bet = al[1] #—Å—Ç–∞–≤–∫–∞
			    				f = open('Balance.txt', 'r')
			    				balance = f.readlines()
			    				id_user = False
			    				monet = ["–æ—Ä–µ–ª", "—Ä–µ—à–∫–∞"]
			    				monet = random.choice(monet)

			    				for b in balance:

			    					if str(iduser) in b:
			    						index = balance.index(b) #–ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–∞ —Å—Ç—Ä–æ–∫–∏
			    						x = b.split(" ", 1)
			    						x = x[1] #–ø–æ–ª—É—á–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –∏–≥—Ä–æ–∫–∞
			    						id_user = True
			    						check = int(x) - int(bet)

			    						if check >= 0:

				    						if a1 == monet:
				    							win = "–í—ã–ø–∞–ª–æ: " + monet
				    							win2 = "–í—ã –≤—ã–π–≥—Ä–∞–ª–∏!üôÇüëç"
				    							balance_new = int(x) + int(bet) #–Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å –∏–≥—Ä–æ–∫–∞
				    							bank = name + ", " + "–Ω–∞ –≤–∞—à–µ–º —Å—á–µ—Ç—É —Å–µ–π—á–∞—Å: " + str(balance_new) + "üí≤"
				    							balance_new2 = str(iduser) + " " + str(balance_new)
				    							del balance[index] #—É–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–π –∑–∞–ø–∏—Å–∏
				    							balance.append(balance_new2) #–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏
				    							f.close()
				    							f = open('Balance.txt', 'w')
				    							f.writelines(balance)#–ó–∞–ø–∏—Å—å –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª
				    							f.close()#–∑–∞–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞
				    							write_message(sender, win)#–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–≥—Ä–æ–∫—É
				    							write_message(sender, win2)#–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–≥—Ä–æ–∫—É
				    							write_balance(sender, bank)

				    						elif not a1 == monet:
				    							lose = "–í—ã–ø–∞–ª–æ: " + monet
				    							lose2 = "–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!üòüüëé"
				    							balance_new = int(x) - int(bet) #–Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å –∏–≥—Ä–æ–∫–∞
				    							bank = name + ", " + "–Ω–∞ –≤–∞—à–µ–º —Å—á–µ—Ç—É —Å–µ–π—á–∞—Å: " + str(balance_new) + "üí≤"
				    							balance_new2 = str(iduser) + " " + str(balance_new)
				    							del balance[index] #—É–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–π –∑–∞–ø–∏—Å–∏
				    							balance.append(balance_new2) #–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏
				    							f.close()
				    							f = open('Balance.txt', 'w')
				    							f.writelines(balance)#–ó–∞–ø–∏—Å—å –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª
				    							f.close()#–∑–∞–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞
				    							write_message(sender, lose)#–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–≥—Ä–æ–∫—É
				    							write_message(sender, lose2)#–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–≥—Ä–æ–∫—É
				    							write_balance(sender, bank)

				    							if balance_new == 0:
				    								gethelp = name + ", " + "üë©‚Äçüíº–≤—ã —Å—Ç–∞–ª–∏ –±–∞–Ω–∫—Ä–æ—Ç–æ–º? –ü–æ–ª—É—á–∏—Ç–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –ø–æ–º–æ—â—åüí∞ –≤ —Ä–∞–∑–º–µ—Ä–µ 50000üí≤"
				    								write_gethelp(sender, gethelp)

				    					elif check < 0:
				    						a = name + ", " + "‚ö†–Ω–∞  –≤–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –∏–≥—Ä—ã."
				    						write_message(sender, a)


			    				if id_user == False:
			    					start_balance = 50000
			    					check = start_balance - int(bet)

			    					if check >= 0:

				    					if a1 == monet:
				    						win = "–í—ã–ø–∞–ª–æ: " + monet
				    						win2 = "–í—ã –≤—ã–π–≥—Ä–∞–ª–∏!üôÇüëç"
				    						balance_new = start_balance + int(bet)
				    						bank = name + ", " + "–Ω–∞ –≤–∞—à–µ–º —Å—á–µ—Ç—É —Å–µ–π—á–∞—Å: " + str(balance_new) + "üí≤"
				    						balance_new2 = "\n" + str(iduser) + " " + str(balance_new)
				    						f.close()
				    						f = open('Balance.txt', 'r+')
				    						f.write(balance_new2)
				    						f.close()
				    						write_message(sender, win)
				    						write_message(sender, win2)
				    						write_balance(sender, bank)

				    					elif not a1 == monet:
				    						lose = "–í—ã–ø–∞–ª–æ: " + monet
				    						lose2 = "–í—ã –≤—ã–π–≥—Ä–∞–ª–∏!üòüüëé"
				    						balance_new = start_balance - int(bet)
				    						bank = name + ", " + "–Ω–∞ –≤–∞—à–µ–º —Å—á–µ—Ç—É —Å–µ–π—á–∞—Å: " + str(balance_new) + "üí≤"
				    						balance_new2 = "\n" + str(iduser) + " " + str(balance_new)
				    						f.close()
				    						f = open('Balance.txt', 'r+')
				    						f.write(balance_new2)
				    						f.close()
				    						write_message(sender, lose)
				    						write_message(sender, lose2)
				    						write_balance(sender, bank)

			    							if balance_new == 0:
			    								gethelp = name + ", " + "üë©‚Äçüíº–≤—ã —Å—Ç–∞–ª–∏ –±–∞–Ω–∫—Ä–æ—Ç–æ–º? –ü–æ–ª—É—á–∏—Ç–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –ø–æ–º–æ—â—åüí∞ –≤ —Ä–∞–∑–º–µ—Ä–µ 50000üí≤"
			    								write_gethelp(sender, gethelp)

				    				elif check < 0:
				    					a = name + ", " + "‚ö†–Ω–∞  –≤–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –∏–≥—Ä—ã."
				    					write_message(sender, a)

			    			except:
			    				write_message(sender, "‚ö†–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫! –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ù–∞–ø—Ä–∏–º–µ—Ä: /–æ—Ä–µ–ª 100")





			    		




			    		


			    		else:	#–ï–°–õ–ò –ë–û–¢ –ù–ò–ß–ï–ì–û –ù–ï –ü–û–ù–Ø–õ
				    		fail = random.choice(fail_list_bot)
				    		write_message(sender, fail)

























		    	elif event.from_user and event.message and event.message.get('text'):   #–ï–°–õ–ò –ù–ê–ü–ò–°–ê–õ–ò –í –õ–°
		    		reseived_message = event.message.get("text")
		    		sender = event.message.get("from_id")

		    		if reseived_message.lower() in hello_list_user:
		    			hello = random.choice(hello_list_bot)
		    			write_message2(sender, hello)

		    		elif reseived_message.lower() == "—Å–ª–µ–¥—É—é—â–∏–π –∞–Ω–µ–∫–¥–æ—ÇüòÇ":
		    			f = open('joke.txt', 'r+')
		    			a = f.readlines()
		    			joke = random.choice(a)
		    			write_joke2(sender, joke)
		    			f.close()

		    		elif reseived_message.lower() == "—Å–ª–µ–¥—É—é—â–∞—è –∏—Å—Ç–æ—Ä–∏—èüò±":
		    			story = random.choice(history_list_bot)
		    			write_history2(sender, story)

		    		elif reseived_message.lower() == "—Å–ª–µ–¥—É—é—â–∞—è —Ü–∏—Ç–∞—Ç–∞üìï":
		    			CITAT = 'https://citatnica.ru/citaty/samye-luchshie-tsitaty'
	    				headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.102 YaBrowser/20.9.1.110 Yowser/2.5 Safari/537.36'}
	    				full_page = requests.get(CITAT, headers=headers)
	    				soup = BeautifulSoup(full_page.content, 'html.parser')
	    				convertd = soup.findAll("div", {"class": "su-note"})
	    				a = random.choice(convertd)
	    				a = a.text
	    				write_citat2(sender, a)



		    		elif reseived_message.lower() == "/help!":
		    			write_message2(sender, help_list_bot2)

		    		elif reseived_message.lower() == "–¥–∞" or reseived_message.lower() == "–¥–∞." or reseived_message.lower() == "–¥–∞," or reseived_message.lower() == "–¥–∞!" or reseived_message.lower() == "–¥–∞?": #–î–ê
		    			yes = random.choice(yes_list_bot)
		    			write_message2(sender, yes)

		    		elif reseived_message.lower() == "–Ω–µ—Ç" or reseived_message.lower() == "–Ω–µ—Ç." or reseived_message.lower() == "–Ω–µ—Ç," or reseived_message.lower() == "–Ω–µ—Ç!" or reseived_message.lower() == "–Ω–µ—Ç?" or reseived_message.lower() == "–Ω–µ" or reseived_message.lower() == "–Ω–µ!" or reseived_message.lower() == "–Ω–µ?" or reseived_message.lower() == "–Ω–µ." or reseived_message.lower() == "–Ω–µ,": #–ù–ï–¢
		    			no = random.choice(no_list_bot)
		    			write_message2(sender, no)


		    		elif reseived_message.lower() == "—ç–¥–≤–∞—Ä–¥" or reseived_message.lower() == "–µ–¥–≤–∞—Ä–¥" or reseived_message.lower() == "–±–æ—Ç" or reseived_message.lower() == "edward":
		    			bot = random.choice(user_bot_list)
		    			write_message2(sender, bot)

		    		elif reseived_message.lower() in help_list_user: #–ö–û–ú–ê–ù–î–´
		    			write_message2(sender, help_list_bot)

		    		elif reseived_message.lower() in joke_list_user: #–ê–ù–ï–ö–î–û–¢
	    				f = open('joke.txt', 'r+')
		    			a = f.readlines()
		    			joke = random.choice(a)
		    			write_joke2(sender, joke)
		    			f.close()
		    			


		    		elif reseived_message.lower() in history_list_user: #–ñ–£–¢–ö–ê–Ø –ò–°–¢–û–†–ò–Ø
		    			story = random.choice(history_list_bot)
		    			write_history2(sender, story)

		    		elif reseived_message.lower() in cicat_list_user: #–¶–ò–¢–ê–¢–ê
		    			CITAT = 'https://citatnica.ru/citaty/samye-luchshie-tsitaty'
		    			headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.102 YaBrowser/20.9.1.110 Yowser/2.5 Safari/537.36'}
		    			full_page = requests.get(CITAT, headers=headers)
		    			soup = BeautifulSoup(full_page.content, 'html.parser')
		    			convertd = soup.findAll("div", {"class": "su-note"})
		    			a = random.choice(convertd)
		    			a = a.text
		    			write_citat2(sender, a)


		    		elif reseived_message.lower() == "—à–∞—Ä" or reseived_message.lower() == "/—à–∞—Ä":  #–ö–û–ú–ê–ù–î–ê –®–ê–†
		    				write_message2(sender, "‚ö†–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É —à–∞—Ä [—Ñ—Ä–∞–∑–∞]")

		    		elif ("—à–∞—Ä " in reseived_message.lower() or "/—à–∞—Ä " in reseived_message.lower()) and not (reseived_message.lower() == "—à–∞—Ä" or reseived_message.lower() == "/—à–∞—Ä"):
		    			ball = random.choice(ball_list)
		    			write_message2(sender, "üîÆ")
		    			write_message2(sender, ball)


		    		elif "–≤—ã–±–µ—Ä–∏ " in reseived_message.lower():    #–ö–û–ú–ê–ù–î–ê –í–´–ë–ï–†–ò
		    			reseived_message_new = reseived_message.lower().split("–≤—ã–±–µ—Ä–∏ ", 1)
		    			index = reseived_message_new[1].split(" –∏–ª–∏ ")
		    			index1 = index[0]
		    			index2 = index[1]
		    			if "?" in index2 or "." in index2 or "!" in index2 or "," in index2:
		    				index2 = list(index2)
		    				index2.pop()
		    				index_new = index2
		    				index2 = ''.join(index_new)
		    				index = [index1, index2]
		    				message = random.choice(index)
		    				write_message2(sender, message)
		    			else:#6
		    				index = [index1, index2]
		    				message = random.choice(index)
		    				write_message2(sender, message)

		    		elif reseived_message.lower() == "–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å" or reseived_message.lower() == "–∏–Ω—Ñ–∞" or reseived_message.lower() == "/–∏–Ω—Ñ–∞" or reseived_message.lower() == "/–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å": #–í–ï–†–û–Ø–¢–ù–û–°–¢–¨
		    			infa = random.choice(infa_list_bot)
		    			write_message2(sender, infa)

		    		elif ("–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å " in reseived_message.lower() or "–∏–Ω—Ñ–∞ " in reseived_message.lower() or "/–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å " in reseived_message.lower() or "/–∏–Ω—Ñ–∞ " in reseived_message.lower()) and not (reseived_message.lower() == "–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å" or reseived_message.lower() == "–∏–Ω—Ñ–∞" or reseived_message.lower() == "/–∏–Ω—Ñ–∞" or reseived_message.lower() == "/–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å"):
		    			reseived_message_new = reseived_message.lower().split(" ", 1)
		    			index = reseived_message_new[1]
		    			index = list(index)
		    			if "?" in index or "." in index or "!" in index:
		    				index.pop()
		    				index_new = index
		    				index = ''.join(index_new)
		    				infa = random.choice(infa_list_bot)
		    				message = "–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Ç–æ–≥–æ, —á—Ç–æ " + index + ", —Ä–∞–≤–Ω–∞: " + infa
		    				write_message2(sender, message)
		    			else:#5
		    				index = ''.join(index)
		    				infa = random.choice(infa_list_bot)
		    				message = "–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Ç–æ–≥–æ, —á—Ç–æ " + index + ", —Ä–∞–≤–Ω–∞: " + infa
		    				write_message2(sender, message)







		    		elif ("/flip " in reseived_message.lower() or "flip " in reseived_message.lower()) and not (reseived_message.lower() == "/flip" or reseived_message.lower() == "flip"):    #–ö–û–ú–ê–ù–î–ê /FLIP
		    			reseived_message_new = reseived_message.lower().split(" ", 1)
		    			index = reseived_message_new[1]
		    			flip = index[::-1]
		    			write_message2(sender, "üîÅ–ü–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞—é...")
		    			write_message2(sender, flip)

		    		elif reseived_message.lower() == "/flip" or reseived_message.lower() == "flip":
		    			write_message2(sender, "‚ö†–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /flip [—Ñ—Ä–∞–∑–∞]")





		    		elif reseived_message.lower() == "–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å" or reseived_message.lower() == "–∏–Ω—Ñ–∞" or reseived_message.lower() == "/–∏–Ω—Ñ–∞" or reseived_message.lower() == "/–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å": #–í–ï–†–û–Ø–¢–ù–û–°–¢–¨
		    			infa = random.choice(infa_list_bot)
		    			write_message2(sender, infa)

		    		elif ("–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å " in reseived_message.lower() or "–∏–Ω—Ñ–∞ " in reseived_message.lower() or "/–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å " in reseived_message.lower() or "/–∏–Ω—Ñ–∞ " in reseived_message.lower()) and not (reseived_message.lower() == "–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å" or reseived_message.lower() == "–∏–Ω—Ñ–∞" or reseived_message.lower() == "/–∏–Ω—Ñ–∞" or reseived_message.lower() == "/–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å"):
		    			reseived_message_new = reseived_message.lower().split(" ", 1)
		    			index = reseived_message_new[1]
		    			index = list(index)
		    			if "?" in index or "." in index or "!" in index:
		    				index.pop()
		    				index_new = index
		    				index = ''.join(index_new)
		    				infa = random.choice(infa_list_bot)
		    				message = "–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Ç–æ–≥–æ, —á—Ç–æ " + index + ", —Ä–∞–≤–Ω–∞: " + infa
		    				write_message2(sender, message)
		    			else:#4
		    				index = ''.join(index)
		    				infa = random.choice(infa_list_bot)
		    				message = "–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Ç–æ–≥–æ, —á—Ç–æ " + index + ", —Ä–∞–≤–Ω–∞: " + infa
		    				write_message2(sender, message)




		    		elif reseived_message.lower() in id_list: #–ö–û–ú–ê–ù–î–ê –ê–ô–î–ò
		    			iduser = event.message.get("from_id")
		    			user = vk_session.method("users.get", {"user_ids": iduser})
		    			name = user[0]['first_name']
		    			write_message2(sender, "‚åõ–ü–æ–¥–æ–∂–¥–∏—Ç–µ...")
		    			iduser = name + ", " + " –≤–∞—à üÜî: " + str(iduser)
		    			write_message2(sender, iduser)



		    		elif reseived_message.lower() == "–ø–æ–≥–æ–¥–∞" or reseived_message.lower() == "/–ø–æ–≥–æ–¥–∞":   # –ü–û–ì–û–î–ê
		    			write_message2(sender, "‚ö†–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –ø–æ–≥–æ–¥–∞ [–≥–æ—Ä–æ–¥]")

		    		elif ("–ø–æ–≥–æ–¥–∞ " in reseived_message.lower() or "/–ø–æ–≥–æ–¥–∞ " in reseived_message.lower()) and not (reseived_message.lower() == "–ø–æ–≥–æ–¥–∞" or reseived_message.lower() == "/–ø–æ–≥–æ–¥–∞"):

		    			try:

			    			reseived_message_new = reseived_message.lower().split(" ", 1)
			    			city = reseived_message_new[1]
			    			observation = mgr.weather_at_place(city)
			    			weather = observation.weather
			    			a = weather.detailed_status
			    			temp = weather.temperature('celsius')['temp']
			    			wind = observation.weather.wind()['speed']
			    			weather1 = '''
			    			üå•–ü–æ–≥–æ–¥–∞üå•
			    			'''
			    			weathercity = "\nüèõ–í –≥–æ—Ä–æ–¥–µ —Å–µ–π—á–∞—Å " + a + "."
			    			down1 = '''
			    			'''
			    			cels = "\nüå°–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –≥–æ—Ä–æ–¥–µ " + city + " –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ —Ä–∞–≤–Ω–∞ " + str(temp) + "¬∞ –≥—Ä–∞–¥—É—Å–æ–≤."
			    			down2 = '''
			    			'''
			    			wind1 = "\nüí®–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ " + str(wind) + " –º/—Å."
			    			message = weather1 + weathercity + down1 + cels + down2 + wind1

			    		except:

			    			write_message2(sender, "‚ö†–û—à–∏–±–∫–∞! –¢–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")

			    		else:#3

			    			write_message2(sender, message)



		    		elif "–≤–∏–∫–∏ " in reseived_message.lower() or "/–≤–∏–∫–∏ " in reseived_message.lower() or "–≤–∏–∫–∏–ø–µ–¥–∏—è " in reseived_message.lower() or "/–≤–∏–∫–∏–ø–µ–¥–∏—è " in reseived_message.lower(): #–ö–û–ú–ê–ù–î–ê 

		    			try:

			    			reseived_message_new = reseived_message.lower().split(" ", 1)
			    			index = reseived_message_new[1]
			    			write_message2(sender, "‚åõ–ü–æ–¥–æ–∂–¥–∏—Ç–µ...")
			    			wikipedia.set_lang('ru')
			    			wiki = wikipedia.summary(index)

			    		except:

			    			write_message2(sender, "‚ö†–ù–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.")

			    		else:#2

			    			write_message2(sender, wiki)

		    		elif "–ø–µ—Ä–µ–≤–æ–¥ " in reseived_message.lower() or "–ø–µ—Ä–µ–≤–µ–¥–∏ " in reseived_message.lower() or "/–ø–µ—Ä–µ–≤–æ–¥ " in reseived_message.lower() or "/–ø–µ—Ä–µ–≤–µ–¥–∏ " in reseived_message.lower(): #–ö–û–ú–ê–ù–î–ê –ü–ï–†–ï–í–û–î–ê

		    			try:

			    			reseived_message_new = reseived_message.lower().split(" ", 1)
			    			index = reseived_message_new[1]
			    			write_message2(sender, "‚åõ–ü–æ–¥–æ–∂–¥–∏—Ç–µ...")
			    			translator= Translator(to_lang="ru")
			    			translation = translator.translate(index)

			    		except:

			    			write_message2(sender, "‚ö†–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥.")

			    		else:#1

			    			write_message2(sender, translation)							

		    		elif reseived_message.lower() == "/ed" or ("/ed " in reseived_message.lower() and not reseived_message.lower() == "/ed"):
		    			write_message2(sender, "‚ö†–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –±–µ—Å–µ–¥–µ.")






		    		elif reseived_message.lower() == "/idc" or reseived_message.lower() == "idc": #–ö–û–ú–ê–ù–î–ê –ê–ô–î–ò –ë–ï–°–ï–î–´
		    			write_message2(sender, "‚ö†–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –±–µ—Å–µ–¥–µ.")

	    			elif reseived_message.lower() in mates_list_user:
		    			r = [True, False, False]
		    			r = random.choice(r)

		    			if r == True:
		    				r = "–°–∞–º " + reseived_message.lower()
		    				write_message2(sender, r)

		    			elif r == False:
			    			mat = random.choice(mates_list_bot)
			    			write_message2(sender, mat)

			    	elif reseived_message.lower() == "/vs":
			    		write_message2(sender, "‚ö†–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /vs [–ø—Ä–æ—Ç–∏–≤–Ω–∏–∫] –ø—Ä–æ—Ç–∏–≤ [–ø—Ä–æ—Ç–∏–≤–Ω–∏–∫2]")



			    	elif "/vs " in reseived_message.lower():
			    		reseived_message_new = reseived_message.lower().split("/vs ", 1)
			    		reseived_message_new2 = reseived_message_new[1]
			    		index = reseived_message_new2.split(" –ø—Ä–æ—Ç–∏–≤ ", 1)
			    		index1 = index[0]
			    		index2 = index[1]
			    		damage1 = [15, 30, 35]
			    		damage2 = [40, 45, 50]
			    		damage_list = ["–Ω–∞–Ω–æ—Å–∏—Ç —É—Ä–æ–Ω", "–Ω–∞–Ω–æ—Å–∏—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–Ω"]
			    		protection = "–∑–∞—â–∏—Ç–∏–ª—Å—è(–∞—Å—å) –æ—Ç —É—Ä–æ–Ω–∞"
			    		protection_tf = [True, False, False]
			    		write_message2(sender, "–ë–æ–π –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è!")
			    		vs = True
			    		life1 = 100
			    		life2 = 100

			    		while vs == True:

			    			score = "üë§" + index1 + " " + "[" + str(life1) + "]" + "üÜö" + "[" + str(life2) + "]" + " " + index2 + "üë§"
			    			write_message2(sender, score)
			    			damagelist = random.choice(damage_list)
			    			batle = index1 + " " + damagelist
			    			write_message2(sender, batle)
			    			protect = random.choice(protection_tf)

			    			if damagelist == "–Ω–∞–Ω–æ—Å–∏—Ç —É—Ä–æ–Ω" and protect == False:
			    				damage = random.choice(damage1)
			    				life = life2 - damage
			    				life2 = life
			    				score = "üë§" + index1 + " " + "[" + str(life1) + "]" + "üÜö" + "[" + str(life2) + "]" + " " + index2 + "üë§"

			    				if life2 > 0:
			    					write_message2(sender, score)
			    					damagelist = random.choice(damage_list)
			    					batle = index2 + " " + damagelist
			    					write_message2(sender, batle)

			    					if damagelist == "–Ω–∞–Ω–æ—Å–∏—Ç —É—Ä–æ–Ω" and protect == False:
			    						damage = random.choice(damage1)
			    						life = life1 - damage
			    						life1 = life

			    						if life1 <= 0:
			    							vs = False
			    							life1 = 0
			    							score = "üë§" + index1 + " " + "[" + str(life1) + "]" + "üÜö" + "[" + str(life2) + "]" + " " + index2 + "üë§"
			    							write_message2(sender, score)
			    							win = "üèÜ" + index2 + " " + "–ø–æ–±–µ–¥–∏–ª!" + "üèÜ"
			    							write_message2(sender, win)
			    							life1 = 100
			    							life2 = 100

			    					elif damagelist == "–Ω–∞–Ω–æ—Å–∏—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–Ω" and protect == False:
			    						damage = random.choice(damage2)
			    						life = life1 - damage
			    						life1 = life

			    						if life1 <= 0:
			    							vs = False
			    							life1 = 0
			    							score = "üë§" + index1 + " " + "[" + str(life1) + "]" + "üÜö" + "[" + str(life2) + "]" + " " + index2 + "üë§"
			    							write_message2(sender, score)
			    							win = "üèÜ" + index2 + " " + "–ø–æ–±–µ–¥–∏–ª!" + "üèÜ"
			    							write_message2(sender, win)
			    							life1 = 100
			    							life2 = 100

			    					elif protect == True:
			    						batle = index1 + " " + "–∑–∞—â–∏—Ç–∏–ª—Å—è(–∞—Å—å) –æ—Ç —É—Ä–æ–Ω–∞"
			    						write_message2(sender, batle)

			    				elif life2 <= 0:
			    					vs = False
			    					life2 = 0
			    					score = "üë§" + index1 + " " + "[" + str(life1) + "]" + "üÜö" + "[" + str(life2) + "]" + " " + index2 + "üë§"
			    					write_message2(sender, score)
			    					win = "üèÜ" + index1 + " " + "–ø–æ–±–µ–¥–∏–ª!" + "üèÜ"
			    					write_message2(sender, win)
			    					life1 = 100
			    					life2 = 100

			    			elif damagelist == "–Ω–∞–Ω–æ—Å–∏—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–Ω" and protect == False:
			    				damage = random.choice(damage2)
			    				life = life2 - damage
			    				life2 = life
			    				score = "üë§" + index1 + " " + "[" + str(life1) + "]" + "üÜö" + "[" + str(life2) + "]" + " " + index2 + "üë§"

			    				if life2 > 0:
			    					write_message2(sender, score)
			    					damagelist = random.choice(damage_list)
			    					batle = index2 + " " + damagelist
			    					write_message2(sender, batle)

			    					if damagelist == "–Ω–∞–Ω–æ—Å–∏—Ç —É—Ä–æ–Ω" and protect == False:
			    						damage = random.choice(damage1)
			    						life = life1 - damage
			    						life1 = life

			    						if life1 <= 0:
			    							vs = False
			    							life1 = 0
			    							score = "üë§" + index1 + " " + "[" + str(life1) + "]" + "üÜö" + "[" + str(life2) + "]" + " " + index2 + "üë§"
			    							write_message2(sender, score)
			    							win = "üèÜ" + index2 + " " + "–ø–æ–±–µ–¥–∏–ª!" + "üèÜ"
			    							write_message2(sender, win)
			    							life1 = 100
			    							life2 = 100

			    					elif damagelist == "–Ω–∞–Ω–æ—Å–∏—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–Ω" and protect == False:
			    						damage = random.choice(damage2)
			    						life = life1 - damage
			    						life1 = life

			    						if life1 <= 0:
			    							vs = False
			    							life1 = 0
			    							score = "üë§" + index1 + " " + "[" + str(life1) + "]" + "üÜö" + "[" + str(life2) + "]" + " " + index2 + "üë§"
			    							write_message2(sender, score)
			    							win = "üèÜ" + index2 + " " + "–ø–æ–±–µ–¥–∏–ª!" + "üèÜ"
			    							write_message2(sender, win)
			    							life1 = 100
			    							life2 = 100

			    					elif protect == True:
			    						batle = index1 + " " + "–∑–∞—â–∏—Ç–∏–ª—Å—è(–∞—Å—å) –æ—Ç —É—Ä–æ–Ω–∞"
			    						write_message2(sender, batle)

			    				elif life2 <= 0:
			    					vs = False
			    					life2 = 0
			    					score = "üë§" + index1 + " " + "[" + str(life1) + "]" + "üÜö" + "[" + str(life2) + "]" + " " + index2 + "üë§"
			    					write_message2(sender, score)
			    					win = "üèÜ" + index1 + " " + "–ø–æ–±–µ–¥–∏–ª!" + "üèÜ"
			    					write_message2(sender, win)
			    					life1 = 100
			    					life2 = 100

			    			elif protect == True:
			    				batle = index2 + " " + "–∑–∞—â–∏—Ç–∏–ª—Å—è(–∞—Å—å) –æ—Ç —É—Ä–æ–Ω–∞"
			    				write_message2(sender, batle)
			    				damagelist = random.choice(damage_list)
			    				batle = index2 + " " + damagelist
			    				protect = random.choice(protection_tf)
			    				write_message2(sender, batle)

			    				if damagelist == "–Ω–∞–Ω–æ—Å–∏—Ç —É—Ä–æ–Ω" and protect == False:
			    					damage = random.choice(damage1)
			    					life = life1 - damage
			    					life1 = life

			    					if life1 <= 0:
			    						vs = False
			    						life1 = 0
			    						score = "üë§" + index1 + " " + "[" + str(life1) + "]" + "üÜö" + "[" + str(life2) + "]" + " " + index2 + "üë§"
			    						write_message2(sender, score)
			    						win = "üèÜ" + index2 + " " + "–ø–æ–±–µ–¥–∏–ª!" + "üèÜ"
			    						write_message2(sender, win)
			    						life1 = 100
			    						life2 = 100

			    				elif damagelist == "–Ω–∞–Ω–æ—Å–∏—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–Ω" and protect == False:
			    					damage = random.choice(damage2)
			    					life = life1 - damage
			    					life1 = life

			    					if life1 <= 0:
			    						vs = False
			    						life1 = 0
			    						score = "üë§" + index1 + " " + "[" + str(life1) + "]" + "üÜö" + "[" + str(life2) + "]" + " " + index2 + "üë§"
			    						write_message2(sender, score)
			    						win = "üèÜ" + index2 + " " + "–ø–æ–±–µ–¥–∏–ª!" + "üèÜ"
			    						write_message2(sender, win)
			    						life1 = 100
			    						life2 = 100

			    				elif protect == True:
			    					batle = index1 + " " + "–∑–∞—â–∏—Ç–∏–ª—Å—è(–∞—Å—å) –æ—Ç —É—Ä–æ–Ω–∞"
			    					write_message2(sender, batle)

			    	elif "–∑–∞—á–µ–º" in reseived_message.lower() or "–ø–æ—á–µ–º—É" in reseived_message.lower() or "–Ω–∞—Ñ–∏–≥–∞" in reseived_message.lower() or "–Ω–∞—Ö—Ä–µ–Ω–∞" in reseived_message.lower() or "–Ω–∞—Ö—É—è" in reseived_message.lower() or "–∫–∞–∫" in reseived_message.lower():
			    		why = random.choice(why_list_bot)
			    		write_message2(sender, why)

			    	elif "–¥–µ–ª–∞" in reseived_message.lower() and "–∫–∞–∫" in reseived_message.lower():
			    		case = random.choice(case_list_bot)
			    		write_message2(sender, case)
			    		d = [True, False, False]
			    		d = random.choice(d)

			    		if d == True:
			    			case = random.choice(case_list_bot2)
			    			write_message2(sender, case)

			    	elif ("–Ω–∞—Ö—É–π" in reseived_message.lower() or "–∏–¥–∏" in reseived_message.lower() or "–ø–æ—à–µ–ª" in reseived_message.lower() or "—Å—ä–µ–±–∞–ª" in reseived_message.lower() or "–ø–∏–∑–¥—É–π" in reseived_message.lower() or "–±–ª—è–¥—å" in reseived_message.lower() or "–ø–∏–∑–¥–µ—Ü" in reseived_message.lower() \
			    		or "–∑–∞–µ–±–∞–ª" in reseived_message.lower()):
			    		mat = random.choice(mates_list_bot)
			    		write_message2(sender, mat)

			    	elif "–∏–∑–≤–∏–Ω–∏ " in reseived_message.lower() or "–ø—Ä–æ—Å—Ç–∏" in reseived_message.lower() or reseived_message.lower() == "–∏–∑–≤–∏–Ω–∏":
			    		sorry = random.choice(sorry_bot_list)
			    		write_message2(sender, sorry)

			    	elif reseived_message.lower() in answer_list_user:
			    		answer = random.choice(answer_list_bot)
			    		write_message2(sender, answer)

			    	elif reseived_message.lower() == "/–∫—É—Ä—Å":
			    		write_message2(sender, "‚åõ–ü–æ–¥–æ–∂–¥–∏—Ç–µ...")
			    		DOLLAR_RUB = 'https://www.google.ru/search?newwindow=1&ei=X8eCX9HEC8iHwPAPwdGcEA&q=–∫—É—Ä—Å+–¥–æ–ª–ª–∞—Ä–∞&oq=–∫—É—Ä—Å+–¥–æ–ª–ª–∞—Ä–∞&gs_lcp=CgZwc3ktYWIQAzINCAAQsQMQgwEQRhCCAjIFCAAQsQMyCAgAELEDEIMBMgUIABCxAzIFCAAQsQMyCAgAELEDEIMBMgUIABCxAzIFCAAQsQMyBQgAELEDMgUIABCxAzoCCABQ6gFYhhpguxtoAHAAeAGAAdUHiAG4FJIBBTUtMS4ymAEAoAEBqgEHZ3dzLXdpesABAQ&sclient=psy-ab&ved=0ahUKEwiR8LC1lKzsAhXIAxAIHcEoBwIQ4dUDCA0&uact=5'
			    		headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.102 YaBrowser/20.9.1.110 Yowser/2.5 Safari/537.36'}
			    		full_page = requests.get(DOLLAR_RUB, headers=headers)
			    		soup = BeautifulSoup(full_page.content, 'html.parser')
			    		convertd = soup.findAll("span", {"class": "DFlfde", "class": "SwHCTb", "data-precision": 2})

			    		EURO_RUB = 'https://www.google.ru/search?newwindow=1&ei=jciCX5DlEYy53AO5t43YBg&q=–∫—É—Ä—Å+–µ–≤—Ä–æ&oq=–∫—É—Ä—Å+–µ–≤—Ä–æ&gs_lcp=CgZwc3ktYWIQAzIKCAAQsQMQRhCCAjIFCAAQsQMyBQgAELEDMgIIADIFCAAQsQMyBQgAELEDMgUIABCxAzIFCAAQsQMyAggAMgUIABCxAzoHCAAQsAMQQzoPCAAQsQMQgwEQQxBGEIICOggIABCxAxCDAToGCAAQChAqOgsIABAKECoQRhCCAjoECAAQClDxriVYz9YlYOnbJWgEcAB4A4ABsAuIAf5JkgELMi0xLjUtMS4yLjaYAQCgAQGqAQdnd3Mtd2l6yAEKwAEB&sclient=psy-ab&ved=0ahUKEwjQ37fFlazsAhWMHHcKHblbA2sQ4dUDCA0&uact=5'
			    		headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.102 YaBrowser/20.9.1.110 Yowser/2.5 Safari/537.36'}
			    		full_page = requests.get(EURO_RUB, headers=headers)
			    		soup = BeautifulSoup(full_page.content, 'html.parser')
			    		converte = soup.findAll("span", {"class": "DFlfde", "class": "SwHCTb", "data-precision": 2})

			    		BTC_RUB = 'https://www.google.ru/search?newwindow=1&ei=TtCCX7XMC-n0qwHr1rWQAg&q=–∫—É—Ä—Å+–±–∏—Ç–∫–æ–∏–Ω–∞&oq=–∫—É—Ä—Å+–±–∏—Ç–∫–æ–∏–Ω–∞&gs_lcp=CgZwc3ktYWIQAzINCAAQsQMQgwEQRhCCAjICCAAyAggAMgUIABCxAzICCAAyAggAMgIIADICCAAyAggAMgIIADoHCAAQsQMQQzoECAAQQzoKCAAQsQMQgwEQQzoICAAQsQMQgwFQsi1Y18EtYI_DLWgBcAB4AYABrwWIAbUpkgEFNC01LjWYAQCgAQGqAQdnd3Mtd2l6sAEAwAEB&sclient=psy-ab&ved=0ahUKEwi1q_T3nKzsAhVp-ioKHWtrDSIQ4dUDCA0&uact=5'
			    		headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.102 YaBrowser/20.9.1.110 Yowser/2.5 Safari/537.36'}
			    		full_page = requests.get(BTC_RUB, headers=headers)
			    		soup = BeautifulSoup(full_page.content, 'html.parser')
			    		convertb = soup.findAll("span", {"class": "DFlfde", "class": "SwHCTb", "data-precision": 2})

			    		course1 = "\nüí≤–¢–µ–∫—É—â–∏–π –∫—É—Ä—Åüí≤"
			    		course2 = "\nüíµ–î–æ–ª–ª–∞—Ä - " + str(convertd[0].text) + "‚ÇΩ"
			    		course3 = "\nüí∑–ï–≤—Ä–æ - " + str(converte[0].text) + "‚ÇΩ"
			    		course4 = "\n‚Çø–ë–∏—Ç–∫–æ–∏–Ω - " + str(convertb[0].text) + "‚ÇΩ"
			    		course = course1 + course2 + course3 + course4
			    		write_message2(sender, course)

			    	elif reseived_message.lower() == "/covid" or reseived_message.lower() == "covid" or reseived_message.lower() == "–∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å" or reseived_message.lower() == "/–∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å" or reseived_message.lower() == "/covid19" or reseived_message.lower() == "–∫–æ–≤–∏–¥" or reseived_message.lower() == "/–∫–æ–≤–∏–¥": #–ö–û–†–û–ù–ê–í–ò–†–£–°
			    		covid1()





			    	elif reseived_message.lower() == "/–±–∞–ª–∞–Ω—Å" or reseived_message.lower() == "–±–∞–ª–∞–Ω—Åüí∞" or reseived_message.lower() == "–±–∞–ª–∞–Ω—Å": #–ë–ê–õ–ê–ù–°
			    		iduser = event.message.get("from_id")
		    			user = vk_session.method("users.get", {"user_ids": iduser})
		    			name = user[0]['first_name']

		    			f = open('Balance.txt', 'r+')
		    			balance = f.readlines()
		    			id_user = False

		    			for b in balance:

		    				if str(iduser) in b:
		    					a = b.split(" ", 1)
		    					b = a[1]
		    					iduser = name + ", " + " –≤–∞—à –±–∞–ª–∞–Ω—Åüí∞: " + str(b) + "üí≤"
		    					id_user = True
		    					write_balance2(sender, iduser)

		    					if int(b) == 0:
		    						a = name + ", " + "üë©‚Äçüíº–≤—ã —Å—Ç–∞–ª–∏ –±–∞–Ω–∫—Ä–æ—Ç–æ–º? –ü–æ–ª—É—á–∏—Ç–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –ø–æ–º–æ—â—åüí∞ –≤ —Ä–∞–∑–º–µ—Ä–µ 50000üí≤"
		    						write_gethelp2(sender, a)

		    			if id_user == False:

		    				balance = "50000"
		    				id_user = "\n" + str(iduser) + " " + balance
		    				f.write(id_user)
		    				iduser = name + ", " + " –≤–∞—à –±–∞–ª–∞–Ω—Åüí∞: " + str(balance) + "üí≤"
		    				write_balance2(sender, iduser)

		    			if id_user == True:

		    				id_user = False

		    			f.close()

		    		elif reseived_message.lower() == "/–æ—Ä–µ–ª" or reseived_message.lower() == "/—Ä–µ—à–∫–∞":
		    			write_message2(sender, "‚ö†–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É [/–æ—Ä–µ–ª/—Ä–µ—à–∫–∞] [—Å—Ç–∞–≤–∫–∞]")





		    		elif "/–æ—Ä–µ–ª " in reseived_message.lower() or "/—Ä–µ—à–∫–∞ " in reseived_message.lower(): #–û–†–ï–õ –ò–õ–ò –†–ï–®–ö–ê
		    			iduser = event.message.get("from_id")
		    			user = vk_session.method("users.get", {"user_ids": iduser})
		    			name = user[0]['first_name']

		    			try:
		    			
		    				al = reseived_message.lower().split(" ", 1)
		    				a1 = al[0]
		    				a = a1.split("/", 1)
		    				a1 = a[1] #–æ—Ä–µ–ª –∏–ª–∏ —Ä–µ—à–∫–∞
		    				bet = al[1] #—Å—Ç–∞–≤–∫–∞
		    				f = open('Balance.txt', 'r')
		    				balance = f.readlines()
		    				id_user = False
		    				monet = ["–æ—Ä–µ–ª", "—Ä–µ—à–∫–∞"]
		    				monet = random.choice(monet)

		    				for b in balance:

		    					if str(sender) in b:
		    						index = balance.index(b) #–ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–∞ —Å—Ç—Ä–æ–∫–∏
		    						x = b.split(" ", 1)
		    						x = x[1] #–ø–æ–ª—É—á–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –∏–≥—Ä–æ–∫–∞
		    						id_user = True
		    						check = int(x) - int(bet)

		    						if check >= 0:

			    						if a1 == monet:
			    							win = "–í—ã–ø–∞–ª–æ: " + monet
			    							win2 = "–í—ã –≤—ã–π–≥—Ä–∞–ª–∏!üôÇüëç"
			    							balance_new = int(x) + int(bet) #–Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å –∏–≥—Ä–æ–∫–∞
			    							bank = name + ", " + "–Ω–∞ –≤–∞—à–µ–º —Å—á–µ—Ç—É —Å–µ–π—á–∞—Å: " + str(balance_new) + "üí≤"
			    							balance_new2 = str(sender) + " " + str(balance_new)
			    							del balance[index] #—É–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–π –∑–∞–ø–∏—Å–∏
			    							balance.append(balance_new2) #–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏
			    							f.close()
			    							f = open('Balance.txt', 'w')
			    							f.writelines(balance)#–ó–∞–ø–∏—Å—å –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª
			    							f.close()#–∑–∞–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞
			    							write_message2(sender, win)#–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–≥—Ä–æ–∫—É
			    							write_message2(sender, win2)#–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–≥—Ä–æ–∫—É
			    							write_balance2(sender, bank)

			    						elif not a1 == monet:
			    							lose = "–í—ã–ø–∞–ª–æ: " + monet
			    							lose2 = "–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!üòüüëé"
			    							balance_new = int(x) - int(bet) #–Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å –∏–≥—Ä–æ–∫–∞
			    							bank = name + ", " + "–Ω–∞ –≤–∞—à–µ–º —Å—á–µ—Ç—É —Å–µ–π—á–∞—Å: " + str(balance_new) + "üí≤"
			    							balance_new2 = str(sender) + " " + str(balance_new)
			    							del balance[index] #—É–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–π –∑–∞–ø–∏—Å–∏
			    							balance.append(balance_new2) #–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏
			    							f.close()
			    							f = open('Balance.txt', 'w')
			    							f.writelines(balance)#–ó–∞–ø–∏—Å—å –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª
			    							f.close()#–∑–∞–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞
			    							write_message2(sender, lose)#–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–≥—Ä–æ–∫—É
			    							write_message2(sender, lose2)#–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–≥—Ä–æ–∫—É
			    							write_balance2(sender, bank)

			    							if balance_new == 0:
			    								gethelp = name + ", " + "üë©‚Äçüíº–≤—ã —Å—Ç–∞–ª–∏ –±–∞–Ω–∫—Ä–æ—Ç–æ–º? –ü–æ–ª—É—á–∏—Ç–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –ø–æ–º–æ—â—åüí∞ –≤ —Ä–∞–∑–º–µ—Ä–µ 50000üí≤"
			    								write_gethelp2(sender, gethelp)

			    					elif check < 0:
			    						a = name + ", " + "‚ö†–Ω–∞  –≤–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –∏–≥—Ä—ã."
			    						write_message2(sender, a)


		    				if id_user == False:
		    					start_balance = 50000
		    					check = start_balance - int(bet)

		    					if check >= 0:

			    					if a1 == monet:
			    						win = "–í—ã–ø–∞–ª–æ: " + monet
			    						win2 = "–í—ã –≤—ã–π–≥—Ä–∞–ª–∏!üôÇüëç"
			    						balance_new = start_balance + int(bet)
			    						bank = name + ", " + "–Ω–∞ –≤–∞—à–µ–º —Å—á–µ—Ç—É —Å–µ–π—á–∞—Å: " + str(balance_new) + "üí≤"
			    						balance_new2 = "\n" + str(sender) + " " + str(balance_new)
			    						f.close()
			    						f = open('Balance.txt', 'r+')
			    						f.write(balance_new2)
			    						f.close()
			    						write_message2(sender, win)
			    						write_message2(sender, win2)
			    						write_balance2(sender, bank)

			    					elif not a1 == monet:
			    						lose = "–í—ã–ø–∞–ª–æ: " + monet
			    						lose2 = "–í—ã –≤—ã–π–≥—Ä–∞–ª–∏!üòüüëé"
			    						balance_new = start_balance - int(bet)
			    						bank = name + ", " + "–Ω–∞ –≤–∞—à–µ–º —Å—á–µ—Ç—É —Å–µ–π—á–∞—Å: " + str(balance_new) + "üí≤"
			    						balance_new2 = "\n" + str(sender) + " " + str(balance_new)
			    						f.close()
			    						f = open('Balance.txt', 'r+')
			    						f.write(balance_new2)
			    						f.close()
			    						write_message2(sender, lose)
			    						write_message2(sender, lose2)
			    						write_balance2(sender, bank)

		    							if balance_new == 0:
		    								gethelp = name + ", " + "üë©‚Äçüíº–≤—ã —Å—Ç–∞–ª–∏ –±–∞–Ω–∫—Ä–æ—Ç–æ–º? –ü–æ–ª—É—á–∏—Ç–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –ø–æ–º–æ—â—åüí∞ –≤ —Ä–∞–∑–º–µ—Ä–µ 50000üí≤"
		    								write_gethelp2(sender, gethelp)

			    				elif check < 0:
			    					a = name + ", " + "‚ö†–Ω–∞  –≤–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –∏–≥—Ä—ã."
			    					write_message2(sender, a)

		    			except:
		    				write_message2(sender, "‚ö†–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫! –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ù–∞–ø—Ä–∏–º–µ—Ä: /–æ—Ä–µ–ª 100")





		    		elif reseived_message.lower() == "–ø–æ–ª—É—á–∏—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –ø–æ–º–æ—â—åüí∞" or reseived_message.lower() == "/–ø–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å": #–§–ò–ù–ê–ù–°–û–í–ê–Ø –ü–û–ú–û–©–¨
		    			f = open('Balance.txt', 'r')
		    			balance = f.readlines()
		    			id_user = False
		    			iduser = event.message.get("from_id")
		    			user = vk_session.method("users.get", {"user_ids": iduser})
		    			name = user[0]['first_name']

		    			for b in balance:
		    				if str(sender) in b:
		    					index = balance.index(b) #–ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–∞ —Å—Ç—Ä–æ–∫–∏
		    					x = b.split(" ", 1)
		    					x = x[1]
		    					id_user = True

		    					if int(x) == 0:

		    						index = balance.index(b)
		    						del balance[index]
		    						balance_new = str(sender) + " " + str(50000)
		    						balance.append(balance_new)
		    						f.close()
		    						f = open('Balance.txt', 'w')
		    						f.writelines(balance)
		    						f.close()
		    						gethelp = name + ", " + "üë©‚Äçüíº–≤—ã –ø–æ–ª—É—á–∏–ª–∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –ø–æ–º–æ—â—åüí∞ –≤ —Ä–∞–∑–º–µ—Ä–µ 50000üí≤"
		    						write_balance2(sender, gethelp)

		    					if int(x) > 0:
		    						a = name + ", " + "üë©‚Äçüíº–º—ã –Ω–µ –º–æ–∂–µ–º –æ–∫–∞–∑–∞—Ç—å –≤–∞–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É, —Ç–∞–∫ –∫–∞–∫ –Ω–∞ –≤–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ –µ—Å—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞."
		    						write_message2(sender, a)

		    			if id_user == False:
		    				f.close()
		    				f = open('Balance.txt', 'r+')
		    				balance_new = "\n" + str(sender) + " " + str(50000)
		    				f.write(balance_new)
		    				gethelp = name + ", " + "üë©‚Äçüíº–º—ã –Ω–µ –º–æ–∂–µ–º –æ–∫–∞–∑–∞—Ç—å –≤–∞–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É, —Ç–∞–∫ –∫–∞–∫ –Ω–∞ –≤–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ –µ—Å—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞."
		    				write_message2(sender, gethelp)




		    		elif reseived_message.lower() == "/–±–æ–Ω—É—Å" or reseived_message.lower() == "–±–æ–Ω—É—ÅüéÅ": #–ë–û–ù–£–°
		    			f = open('Bonus.txt', 'r+')
		    			balance = f.readlines()
		    			id_user = False
		    			iduser = event.message.get("from_id")
		    			user = vk_session.method("users.get", {"user_ids": iduser})
		    			name = user[0]['first_name']

		    			for b in balance:
		    				if str(sender) in b:
		    					a = name + ", " + "üë©‚Äçüíº–≤—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ —Å–≤–æ–π –±–æ–Ω—É—ÅüéÅ –≤ —Ä–∞–∑–º–µ—Ä–µ 1.000.000üí≤"
		    					write_message2(sender, a)
		    					id_user = True
		    					f.close()

		    			if id_user == False:
		    				i = "\n" + str(sender)
		    				f.write(i)
		    				f.close()
		    				f = open('Balance.txt', 'r')
		    				balance = f.readlines()
		    				id_user2 = False

		    				for b in balance:
		    					if str(sender) in b:
		    						index = balance.index(b) #–ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–∞ —Å—Ç—Ä–æ–∫–∏
		    						x = b.split(" ", 1)
		    						x = x[1]
		    						id_user2 = True
		    						balance_new = int(x) + 1000000
		    						balance_new2 = str(sender) + " " + str(balance_new)
		    						del balance[index]
		    						balance.append(balance_new2)
		    						f.close()
		    						f = open('Balance.txt', 'w')
		    						f.writelines(balance)
		    						f.close()
		    						a = name + ", " + "üë©‚Äçüíº–≤—ã –ø–æ–ª—É—á–∏–ª–∏ —Å–≤–æ–π –±–æ–Ω—É—ÅüéÅ –≤ —Ä–∞–∑–º–µ—Ä–µ 1.000.000üí≤"
		    						write_balance2(sender, a)

		    				if id_user2 == False:
		    					f = open('Balance.txt', 'r+')
		    					balance_new = "\n" + str(sender) + " " + str(1050000)
		    					f.write(balance_new)
		    					f.close()
		    					a = name + ", " + "üë©‚Äçüíº–≤—ã –ø–æ–ª—É—á–∏–ª–∏ —Å–≤–æ–π –±–æ–Ω—É—ÅüéÅ –≤ —Ä–∞–∑–º–µ—Ä–µ 1.000.000üí≤"
		    					write_balance2(sender, a)
		    				
		    				id_user2 = False

	    			else: #–ï–°–õ–ò –ë–û–¢ –ù–ò–ß–ï–ì–û –ù–ï –ü–û–ù–Ø–õ
	    				fail = random.choice(fail_list_bot)
	    				write_message2(sender, fail)

		
#requests.exceptions.ReadTimeout:
	except requests.exceptions.ReadTimeout:

		print("\n –ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä–∞–º –í–ö \n")
		time.sleep(3)

