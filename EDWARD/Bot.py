# -*- coding: utf8 -*-
#–ë–æ—Ç –ï–¥–≤–∞—Ä–¥
import vk_api
import random
import os
import time
import requests # –ú–æ–¥—É–ª—å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ URL
from bs4 import BeautifulSoup # –ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å HTML
import wikipedia
import pyshorteners #–°–û–ö–†–ê–©–ï–ù–ù–ê–Ø –°–°–´–õ–ö–ê

import Phrases
from Data import Buttons
from Story import History
from translate import Translator
from pyowm.owm import OWM
from pyowm.utils.config import get_default_config
from vk_api import VkApi
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType, VkBotMessageEvent
from vk_api.utils import get_random_id
from vk_api.keyboard import VkKeyboard, VkKeyboardColor #–ö–õ–ê–í–ò–ê–¢–£–†–ê

from Data import commands, Fight
from Games import Balance_script
from GIF import Gif_script
from Covid_19 import Covid
from Video import Video_script

def write_message(sender, message): #–û–¢–ü–†–ê–í–ö–ê –°–û–û–ë–©–ï–ù–ò–Ø –í –ë–ï–°–ï–î–£
	vk_session.method('messages.send', {'chat_id': sender, 'message': message, 'random_id': get_random_id()})

def write_message2(sender, message): #–û–¢–ü–†–ê–í–ö–ê –°–û–û–ë–©–ï–ù–ò–Ø –í –õ–°
	vk_session.method('messages.send', {'user_id': sender, 'message': message, 'random_id': get_random_id()})

def edit_chat(ids, title): #–ò–ó–ú–ï–ù–ï–ù–ò–ï –ù–ê–ó–í–ê–ù–ò–Ø –ë–ï–°–ï–î–´
	vk_session.method('messages.editChat', {'chat_id': ids, 'title': title})


def write_button(sender, message): #–û–¢–ü–†–ê–í–ö–ê –ö–õ–ê–í–ò–ê–¢–£–†–´
	vk_session.method('messages.send', {'chat_id': sender, 'message': message, 'random_id': get_random_id(), 'keyboard': keyboard.get_keyboard()})

def write_button2(sender, message): #–û–¢–ü–†–ê–í–ö–ê –ö–õ–ê–í–ò–ê–¢–£–†–´
	vk_session.method('messages.send', {'user_id': sender, 'message': message, 'random_id': get_random_id(), 'keyboard': keyboard.get_keyboard()})

def edit_message(sender, message, message_id): #–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ª—Å.
	vk_session.method('messages.edit', {'peer_id': sender, 'message': message, 'message_id': message_id})

def post(text):
	vk_session2.method('wall.post', {'owner_id': -197481314, 'message': text})

def write_video(sender, video, message):
	vk_session.method('messages.send', {'user_id': sender, 'message': "üîé–ù–∞–π–¥–µ–Ω–æ –≤–∏–¥–µ–æ –ø–æ –∑–∞–ø—Ä–æ—Å—É: " + "\"" + message + "\"", 'attachment': video, 'random_id': get_random_id()})

def write_photo2(sender):
	try:
		a = vk_session2.method('wall.get', {'owner_id': -197481314})
		a = a['items']
		r = random.choice(a)
		r = r['attachments'][0]['photo']
		r1 = r['id']
		r2 = r['owner_id']
		photo = "photo" + str(r2) + "_" + str(r1)
		vk_session.method('messages.send', {'user_id': sender, 'message': "–í–æ—Ç –≤–∞–º –º–µ–º –∏–∑ –Ω–∞—à–µ–π –≥—Ä—É–ø–ø—ã", 'attachment': photo, 'random_id': get_random_id()})
	except:
		write_message2(sender, "‚ö†–û—à–∏–±–∫–∞")

def write_video2(sender, video, message):
	vk_session.method('messages.send', {'chat_id': sender, 'message': "üîé–ù–∞–π–¥–µ–Ω–æ –≤–∏–¥–µ–æ –ø–æ –∑–∞–ø—Ä–æ—Å—É: " + "\"" + message + "\"", 'attachment': video, 'random_id': get_random_id()})

token="f4a8b4fc8fe0aa8e080fc21186f5606bd26e26f6429715472af9e201254862bf07c4cec92858e0d40558a"  #–¢–û–ö–ï–ù –ì–†–£–ü–ü–´
access_token = "914ae14206f01f8adaab0ea90b87b6199d09d8aac4ca4075e99e6aed7742ede4328ea6187ad5bb64011e4"
vk_session = VkApi(token = token)
vk_session2 = VkApi(token = access_token)
longpoll = VkBotLongPoll(vk_session, 197481314)
longpollbot = True

#–ü–û–ì–û–î–ê
config_dict = get_default_config()
config_dict['language'] = 'ru'
owm = OWM('1ad03b7000a938a954739c5d5d77e6f2', config_dict)

mgr =  owm.weather_manager() #–ü–û–ì–û–î–ê

while longpollbot:
	try:
		status = vk_session.method('groups.getOnlineStatus', {'group_id': 197481314})
		if not status['status'] == "online":
			vk_session.method('groups.enableOnline', {'group_id': 197481314})

		for event in longpoll.listen():
		    if event.type == VkBotEventType.MESSAGE_NEW:
		    	if event.from_chat and event.message and event.message.get('text'):  #–ï–°–õ–ò –ù–ê–ü–ò–°–ê–õ–ò –í –ß–ê–¢–ï
		    		reseived_message = event.message.get("text")
		    		sender = event.chat_id
		    		
		    		if "—Å–ª–µ–¥—É—é—â–∏–π –∞–Ω–µ–∫–¥–æ—ÇüòÇ" in reseived_message.lower():
	    				f = open('Data/joke.txt', 'r+')
		    			a = f.readlines()
		    			joke = random.choice(a)
		    			keyboard = Buttons.keyboard_joke
		    			write_button(sender, joke)
		    			f.close()

		    		elif "—Å–ª–µ–¥—É—é—â–∞—è –∏—Å—Ç–æ—Ä–∏—èüò±" in reseived_message.lower():
	    				story = random.choice(History.history_list_bot)
	    				keyboard = Buttons.keyboard_history
	    				write_button(sender, story)

	    			elif "—Å–ª–µ–¥—É—é—â–∞—è —Ü–∏—Ç–∞—Ç–∞üìï" in reseived_message.lower():
    					CITAT = 'https://citatnica.ru/citaty/samye-luchshie-tsitaty'
	    				headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.102 YaBrowser/20.9.1.110 Yowser/2.5 Safari/537.36'}
	    				full_page = requests.get(CITAT, headers=headers)
	    				soup = BeautifulSoup(full_page.content, 'html.parser')
	    				convertd = soup.findAll("div", {"class": "su-note"})
	    				a = random.choice(convertd)
	    				a = a.text
	    				keyboard = Buttons.keyboard_citat
	    				write_button(sender, a)

	    			elif "/–æ—Ç–≤–µ—Ç " in reseived_message.lower(): #–û–¢–í–ï–¢
	    				try:
			    			a = reseived_message.lower().split()
			    			iduser = a[1]
			    			text = a[2]
			    			message = "‚úâ–í–∞–º –ø—Ä–∏—à–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏." + '\n' + "üìú–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:" + '\n' + text
			    			write_message2(int(iduser), message)
			    			write_message(sender, "‚úÖ–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.")
			    		except:
			    			write_message(sender, "‚ö†–û—à–∏–±–∫–∞!")

		    		elif reseived_message.lower() == "/–æ—Ç–≤–µ—Ç":
			    		write_message(sender, "‚ö†–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /–æ—Ç–≤–µ—Ç [–∞–π–¥–∏] [—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è]")

			    	elif "/—Ä–µ–ø–æ—Ä—Ç " in reseived_message.lower() or "/report " in reseived_message.lower(): #–†–ï–ü–û–†–¢
		    			try:
			    			user = vk_session.method("users.get", {"user_ids": sender})
			    			name = user[0]['first_name'] #–ü–û–õ–£–ß–ï–ù–ò–ï –ò–ú–ï–ù–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
			    			name2 = user[0]['last_name'] #–ü–û–õ–£–ß–ï–ù–ò–ï –§–ê–ú–ò–õ–ò–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
			    			a = reseived_message.lower().split(" ", 1)
			    			text = a[1]
			    			message1 = '\n' + "üì´–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫—É!" + '\n'
			    			
			    			message2 = '\n' + "üÜîId –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è: " + str(sender)
			    			message3 = '\n' + "üë§–ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è: " + name + " " + name2
			    			message4 = '\n' + "‚úâ–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è: " + '\n'+ '\n' + text + '\n' + '\n'
			    			message5 = "–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /–æ—Ç–≤–µ—Ç [–∞–π–¥–∏] [—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è]"
			    			message = message1 + message2 + message3 + message4 + message5
			    			vk_session.method('messages.send', {'peer_id': 2000000000 + 23, 'message': message, 'random_id': get_random_id()})
			    			write_message(sender, "‚úÖ–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏!")
			    		except:
			    			write_message(sender, "‚ö†–û—à–∏–±–∫–∞!")	
			    		

		    		elif reseived_message.lower() == "/—Ä–µ–ø–æ—Ä—Ç" or reseived_message.lower() == "/report": #–ü–†–û–í–ï–†–ò–¢–¨!!!!!!!!!!!!!!!!!!!!!!
		    			write_message2(sender, "‚ö†–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /—Ä–µ–ø–æ—Ä—Ç [—Å–æ–æ–±—â–µ–Ω–∏–µ]")

		    		#–ö–û–ú–ê–ù–î–´ –ú–û–ñ–ù–û –ü–ò–°–ê–¢–¨, –ë–ï–ó –û–ë–†–ê–©–ï–ù–ò–Ø –ö –ë–û–¢–£

		    		elif "/" in reseived_message.lower()[0]:
		    			reseived_message_new = reseived_message.lower().split("/", 1)
		    			index = reseived_message_new[1]

			    		if index == "help!":
			    			write_message(sender, commands.help_list_bot2)

			    		elif index in commands.id_list: #–ö–û–ú–ê–ù–î–ê –ê–ô–î–ò
			    			iduser = event.message.get("from_id")
			    			user = vk_session.method("users.get", {"user_ids": iduser})
			    			name = user[0]['first_name']
			    			write_message(sender, "‚åõ–ü–æ–¥–æ–∂–¥–∏—Ç–µ...")
			    			iduser = name + ", " + " –≤–∞—à üÜî: " + str(iduser)
			    			write_message(sender, iduser)

			    		elif index == "covid" or index == "–∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å" or index == "covid19" or index == "–∫–æ–≤–∏–¥": #–ö–û–†–û–ù–ê–í–ò–†–£–°
			    			write_message(sender, "‚ö†–ü–æ–¥–æ–∂–¥–∏—Ç–µ...")
			    			try:
			    				Covid.covid()
			    			except:
			    				write_message(sender, "‚ö†–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.")
			    			else:
			    				write_message(sender, Covid.message[0])
			    						
			    		


			    		elif index in commands.help_list_user: #—Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
			    			write_message(sender, commands.help_list_bot)

			    		elif index in commands.joke_list_user: #–ê–ù–ï–ö–î–û–¢
			    			f = open('joke.txt', 'r+')
			    			a = f.readlines()
			    			joke = random.choice(a)
			    			keyboard = Buttons.keyboard_joke
		    				write_button(sender, joke)
			    			f.close()

		    			elif index in commands.cicat_list_user: #–¶–ò–¢–ê–¢–ê
		    				CITAT = 'https://citatnica.ru/citaty/samye-luchshie-tsitaty'
		    				headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.102 YaBrowser/20.9.1.110 Yowser/2.5 Safari/537.36'}
		    				full_page = requests.get(CITAT, headers=headers)
		    				soup = BeautifulSoup(full_page.content, 'html.parser')
		    				convertd = soup.findAll("div", {"class": "su-note"})
		    				a = random.choice(convertd)
		    				a = a.text
		    				keyboard = Buttons.keyboard_citat
		    				write_button(sender, a)

			    		elif index == "—à–∞—Ä":  #–ö–û–ú–ê–ù–î–ê –®–ê–†
			    			write_message(sender, "‚ö†–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /—à–∞—Ä [—Ñ—Ä–∞–∑–∞]")

				    	elif "—à–∞—Ä " in index and not index == "—à–∞—Ä":
				    		ball = random.choice(commands.ball_list)
				    		write_message(sender, "üîÆ")
				    		write_message(sender, ball)

			    		elif "–≤—ã–±–µ—Ä–∏ " in index:    #–ö–û–ú–ê–ù–î–ê –í–´–ë–ï–†–ò
			    			reseived_message_new = index.lower().split("–≤—ã–±–µ—Ä–∏ ", 1)
			    			index = reseived_message_new[1].split(" –∏–ª–∏ ")
			    			index1 = index[0]
			    			index2 = index[1]
			    			if "?" in index2 or "." in index2 or "!" in index2 or "," in index2:
			    				index2 = list(index2)
			    				index2.pop()
			    				index_new = index2
			    				index2 = ''.join(index_new)
			    				index = [index1, index2]
			    				message = random.choice(index)
			    				write_message(sender, message)
			    			else:
			    				index = [index1, index2]
			    				message = random.choice(index)
			    				write_message(sender, message)

			    		elif index in commands.history_list_user: #–ñ–£–¢–ö–ê–Ø –ò–°–¢–û–†–ò–Ø
			    			story = random.choice(History.history_list_bot)
			    			keyboard = Buttons.keyboard_history
			    			write_button(sender, story)

			    		elif index == "–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å" or index == "–∏–Ω—Ñ–∞": #–í–ï–†–û–Ø–¢–ù–û–°–¢–¨
			    			infa = random.choice(commands.infa_list_bot)
			    			write_message(sender, infa)

			    		elif ("–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å " in index or "–∏–Ω—Ñ–∞ " in index) and not (index == "–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å" or index == "–∏–Ω—Ñ–∞"):
			    			reseived_message_new = index.lower().split(" ", 1)
			    			index = reseived_message_new[1]
			    			index = list(index)
			    			if "?" in index or "." in index or "!" in index:
			    				index.pop()
			    				index_new = index
			    				index = ''.join(index_new)
			    				infa = random.choice(commands.infa_list_bot)
			    				message = "–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Ç–æ–≥–æ, —á—Ç–æ " + index + ", —Ä–∞–≤–Ω–∞: " + infa
			    				write_message(sender, message)
			    			else:
			    				index = ''.join(index)
			    				infa = random.choice(commands.infa_list_bot)
			    				message = "–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Ç–æ–≥–æ, —á—Ç–æ " + index + ", —Ä–∞–≤–Ω–∞: " + infa
			    				write_message(sender, message)

			    		elif "flip " in index and not index == "flip":    #–ö–û–ú–ê–ù–î–ê /FLIP
			    			reseived_message_new = index.lower().split(" ", 1)
			    			index = reseived_message_new[1]
			    			flip = index[::-1]
			    			write_message(sender, "üîÅ–ü–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞—é...")
			    			write_message(sender, flip)

			    		elif index == "flip":
			    			write_message(sender, "‚ö†–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /flip [—Ñ—Ä–∞–∑–∞]")

			    		elif index == "–ø–æ–≥–æ–¥–∞": #–ü–û–ì–û–î–ê
			    			write_message(sender, "‚ö†–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /–ø–æ–≥–æ–¥–∞ [–≥–æ—Ä–æ–¥]")

			    		elif "–ø–æ–≥–æ–¥–∞ " in index and not index == "–ø–æ–≥–æ–¥–∞": #–ü–û–ì–û–î–ê
			    			try:
				    			reseived_message_new = index.lower().split(" ", 1)
				    			city = reseived_message_new[1]
				    			observation = mgr.weather_at_place(city)
				    			weather = observation.weather
				    			a = weather.detailed_status
				    			temp = weather.temperature('celsius')['temp']
				    			wind = observation.weather.wind()['speed']
				    			weather1 = '''
				    			üå•–ü–æ–≥–æ–¥–∞üå•
				    			'''
				    			weathercity = "\nüèõ–í –≥–æ—Ä–æ–¥–µ —Å–µ–π—á–∞—Å " + a + "."
				    			down1 = '''
				    			'''
				    			cels = "\nüå°–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –≥–æ—Ä–æ–¥–µ " + city + " –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ —Ä–∞–≤–Ω–∞ " + str(temp) + "¬∞ –≥—Ä–∞–¥—É—Å–æ–≤."
				    			down2 = '''
				    			'''
				    			wind1 = "\nüí®–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ " + str(wind) + " –º/—Å."
				    			message = weather1 + weathercity + down1 + cels + down2 + wind1
				    		except:
				    			write_message(sender, "‚ö†–¢–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
				    		else:
				    			write_message(sender, message)

			    		elif "–≤–∏–∫–∏ " in index or "–≤–∏–∫–∏–ø–µ–¥–∏—è " in index: #–ö–û–ú–ê–ù–î–ê –í–ò–ö–ò
			    			try:
				    			reseived_message_new = index.lower().split(" ", 1)
				    			index = reseived_message_new[1]
				    			write_message(sender, "‚åõ–ü–æ–¥–æ–∂–¥–∏—Ç–µ...")
				    			wikipedia.set_lang('ru')
				    			wiki = wikipedia.summary(index)
				    		except:
				    			write_message(sender, "‚ö†–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.")
				    		else:
				    			write_message(sender, wiki)

			    		elif "–ø–µ—Ä–µ–≤–æ–¥ " in index or "–ø–µ—Ä–µ–≤–µ–¥–∏ " in index: #–ö–û–ú–ê–ù–î–ê –ü–ï–†–ï–í–û–î–ê
			    			try:
				    			reseived_message_new = index.lower().split(" ", 1)
				    			index = reseived_message_new[1]
				    			write_message(sender, "‚åõ–ü–æ–¥–æ–∂–¥–∏—Ç–µ...")
				    			translator= Translator(to_lang="ru")
				    			translation = translator.translate(index)
				    		except:
				    			write_message(sender, "‚ö†–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥.")
				    		else: 
		    					write_message(sender, translation)

			    		elif index == "idc":
			    			idc = event.chat_id
			    			idc = "–ê–π–¥–∏ –±–µ—Å–µ–¥—ãüÜî: " + str(idc)
			    			write_message(sender, "‚åõ–ü–æ–¥–æ–∂–¥–∏—Ç–µ...")
			    			write_message(sender, idc)

				    	elif index == "ed": #–ö–û–ú–ê–ù–î–ê /ed
				    		write_message(sender, "‚ö†–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /ed [–Ω–∞–∑–≤–∞–Ω–∏–µ]")

				    	elif "ed " in index and not index == "ed":
				    		try:
					    		reseived_message_new = index.split(" ", 1)
					    		title = reseived_message_new[1]
					    		ids = event.chat_id
					    		write_message(sender, "‚åõ–ü–æ–¥–æ–∂–¥–∏—Ç–µ...")
					    		edit_chat(ids, title)
					    	except:
					    		write_message(sender, "‚ö†–ë–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–∑–Ω–∞—á–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –≤ –±–µ—Å–µ–¥–µ.")

				    	elif index == "vs":
			    			write_message(sender, "‚ö†–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /vs [–ø—Ä–æ—Ç–∏–≤–Ω–∏–∫] –ø—Ä–æ—Ç–∏–≤ [–ø—Ä–æ—Ç–∏–≤–Ω–∏–∫2]")

				    	elif "vs " in index: #–ö–û–ú–ê–ù–î–ê /VS
				    		reseived_message_new = index.split("vs ", 1)
				    		reseived_message_new2 = reseived_message_new[1]
				    		index = reseived_message_new2.split(" –ø—Ä–æ—Ç–∏–≤ ", 1)
				    		index1 = index[0]
				    		index2 = index[1]
				    		damage1 = [15, 30, 35]
				    		damage2 = [40, 45, 50]
				    		damage_list = ["–Ω–∞–Ω–æ—Å–∏—Ç —É—Ä–æ–Ω", "–Ω–∞–Ω–æ—Å–∏—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–Ω"]
				    		protection = "–∑–∞—â–∏—Ç–∏–ª—Å—è(–∞—Å—å) –æ—Ç —É—Ä–æ–Ω–∞"
				    		protection_tf = [True, False, False]
				    		write_message(sender, "–ë–æ–π –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è!")
				    		vs = True
				    		life1 = 100
				    		life2 = 100
				    		while vs == True:
				    			score = "üë§" + index1 + " " + "[" + str(life1) + "]" + "üÜö" + "[" + str(life2) + "]" + " " + index2 + "üë§"
				    			write_message(sender, score)
				    			damagelist = random.choice(damage_list)
				    			batle = index1 + " " + damagelist
				    			write_message(sender, batle)
				    			protect = random.choice(protection_tf)
				    			if damagelist == "–Ω–∞–Ω–æ—Å–∏—Ç —É—Ä–æ–Ω" and protect == False:
				    				damage = random.choice(damage1)
				    				life = life2 - damage
				    				life2 = life
				    				score = "üë§" + index1 + " " + "[" + str(life1) + "]" + "üÜö" + "[" + str(life2) + "]" + " " + index2 + "üë§"
				    				if life2 > 0:
				    					write_message(sender, score)
				    					damagelist = random.choice(damage_list)
				    					batle = index2 + " " + damagelist
				    					write_message(sender, batle)
				    					if damagelist == "–Ω–∞–Ω–æ—Å–∏—Ç —É—Ä–æ–Ω" and protect == False:
				    						damage = random.choice(damage1)
				    						life = life1 - damage
				    						life1 = life
				    						if life1 <= 0:
				    							vs = False
				    							life1 = 0
				    							score = "üë§" + index1 + " " + "[" + str(life1) + "]" + "üÜö" + "[" + str(life2) + "]" + " " + index2 + "üë§"
				    							write_message(sender, score)
				    							win = "üèÜ" + index2 + " " + "–ø–æ–±–µ–¥–∏–ª!" + "üèÜ"
				    							write_message(sender, win)
				    							life1 = 100
				    							life2 = 100
				    					elif damagelist == "–Ω–∞–Ω–æ—Å–∏—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–Ω" and protect == False:
				    						damage = random.choice(damage2)
				    						life = life1 - damage
				    						life1 = life
				    						if life1 <= 0:
				    							vs = False
				    							life1 = 0
				    							score = "üë§" + index1 + " " + "[" + str(life1) + "]" + "üÜö" + "[" + str(life2) + "]" + " " + index2 + "üë§"
				    							write_message(sender, score)
				    							win = "üèÜ" + index2 + " " + "–ø–æ–±–µ–¥–∏–ª!" + "üèÜ"
				    							write_message(sender, win)
				    							life1 = 100
				    							life2 = 100
				    					elif protect == True:
				    						batle = index1 + " " + "–∑–∞—â–∏—Ç–∏–ª—Å—è(–∞—Å—å) –æ—Ç —É—Ä–æ–Ω–∞"
				    						write_message(sender, batle)
				    				elif life2 <= 0:
				    					vs = False
				    					life2 = 0
				    					score = "üë§" + index1 + " " + "[" + str(life1) + "]" + "üÜö" + "[" + str(life2) + "]" + " " + index2 + "üë§"
				    					write_message(sender, score)
				    					win = "üèÜ" + index1 + " " + "–ø–æ–±–µ–¥–∏–ª!" + "üèÜ"
				    					write_message(sender, win)
				    					life1 = 100
				    					life2 = 100
				    			elif damagelist == "–Ω–∞–Ω–æ—Å–∏—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–Ω" and protect == False:
				    				damage = random.choice(damage2)
				    				life = life2 - damage
				    				life2 = life
				    				score = "üë§" + index1 + " " + "[" + str(life1) + "]" + "üÜö" + "[" + str(life2) + "]" + " " + index2 + "üë§"
				    				if life2 > 0:
				    					write_message(sender, score)
				    					damagelist = random.choice(damage_list)
				    					batle = index2 + " " + damagelist
				    					write_message(sender, batle)
				    					if damagelist == "–Ω–∞–Ω–æ—Å–∏—Ç —É—Ä–æ–Ω" and protect == False:
				    						damage = random.choice(damage1)
				    						life = life1 - damage
				    						life1 = life
				    						if life1 <= 0:
				    							vs = False
				    							life1 = 0
				    							score = "üë§" + index1 + " " + "[" + str(life1) + "]" + "üÜö" + "[" + str(life2) + "]" + " " + index2 + "üë§"
				    							write_message(sender, score)
				    							win = "üèÜ" + index2 + " " + "–ø–æ–±–µ–¥–∏–ª!" + "üèÜ"
				    							write_message(sender, win)
				    							life1 = 100
				    							life2 = 100
				    					elif damagelist == "–Ω–∞–Ω–æ—Å–∏—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–Ω" and protect == False:
				    						damage = random.choice(damage2)
				    						life = life1 - damage
				    						life1 = life
				    						if life1 <= 0:
				    							vs = False
				    							life1 = 0
				    							score = "üë§" + index1 + " " + "[" + str(life1) + "]" + "üÜö" + "[" + str(life2) + "]" + " " + index2 + "üë§"
				    							write_message(sender, score)
				    							win = "üèÜ" + index2 + " " + "–ø–æ–±–µ–¥–∏–ª!" + "üèÜ"
				    							write_message(sender, win)
				    							life1 = 100
				    							life2 = 100
				    					elif protect == True:
				    						batle = index1 + " " + "–∑–∞—â–∏—Ç–∏–ª—Å—è(–∞—Å—å) –æ—Ç —É—Ä–æ–Ω–∞"
				    						write_message(sender, batle)
				    				elif life2 <= 0:
				    					vs = False
				    					life2 = 0
				    					score = "üë§" + index1 + " " + "[" + str(life1) + "]" + "üÜö" + "[" + str(life2) + "]" + " " + index2 + "üë§"
				    					write_message(sender, score)
				    					win = "üèÜ" + index1 + " " + "–ø–æ–±–µ–¥–∏–ª!" + "üèÜ"
				    					write_message(sender, win)
				    					life1 = 100
				    					life2 = 100
				    			elif protect == True:
				    				batle = index2 + " " + "–∑–∞—â–∏—Ç–∏–ª—Å—è(–∞—Å—å) –æ—Ç —É—Ä–æ–Ω–∞"
				    				write_message(sender, batle)
				    				damagelist = random.choice(damage_list)
				    				batle = index2 + " " + damagelist
				    				protect = random.choice(protection_tf)
				    				write_message(sender, batle)
				    				if damagelist == "–Ω–∞–Ω–æ—Å–∏—Ç —É—Ä–æ–Ω" and protect == False:
				    					damage = random.choice(damage1)
				    					life = life1 - damage
				    					life1 = life
				    					if life1 <= 0:
				    						vs = False
				    						life1 = 0
				    						score = "üë§" + index1 + " " + "[" + str(life1) + "]" + "üÜö" + "[" + str(life2) + "]" + " " + index2 + "üë§"
				    						write_message(sender, score)
				    						win = "üèÜ" + index2 + " " + "–ø–æ–±–µ–¥–∏–ª!" + "üèÜ"
				    						write_message(sender, win)
				    						life1 = 100
				    						life2 = 100
				    				elif damagelist == "–Ω–∞–Ω–æ—Å–∏—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–Ω" and protect == False:
				    					damage = random.choice(damage2)
				    					life = life1 - damage
				    					life1 = life
				    					if life1 <= 0:
				    						vs = False
				    						life1 = 0
				    						score = "üë§" + index1 + " " + "[" + str(life1) + "]" + "üÜö" + "[" + str(life2) + "]" + " " + index2 + "üë§"
				    						write_message(sender, score)
				    						win = "üèÜ" + index2 + " " + "–ø–æ–±–µ–¥–∏–ª!" + "üèÜ"
				    						write_message(sender, win)
				    						life1 = 100
				    						life2 = 100
				    				elif protect == True:
				    					batle = index1 + " " + "–∑–∞—â–∏—Ç–∏–ª—Å—è(–∞—Å—å) –æ—Ç —É—Ä–æ–Ω–∞"
				    					write_message(sender, batle)

				    	elif index == "—Å–æ–∫—Ä–∞—Ç–∏ —Å—Å—ã–ª–∫—É": #–°–û–ö–†–ê–©–ï–ù–ù–ê–Ø –°–°–´–õ–ö–ê
			    			write_message(sender, "‚ö†–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /—Å–æ–∫—Ä–∞—Ç–∏ —Å—Å—ã–ª–∫—É [—Å—Å—ã–ª–∫–∞]")

			    		elif "—Å–æ–∫—Ä–∞—Ç–∏ —Å—Å—ã–ª–∫—É " in index: #–°–û–ö–†–ê–©–ï–ù–ù–ê–Ø –°–°–´–õ–ö–ê
			    			try:
				    			iduser = event.message.get("from_id")
				    			user = vk_session.method("users.get", {"user_ids": iduser})
				    			name = user[0]['first_name']
				    			a = index.split("—Å–æ–∫—Ä–∞—Ç–∏ —Å—Å—ã–ª–∫—É ", 1)
				    			a = a[1]
				    			s = pyshorteners.Shortener()
				    			link = s.tinyurl.short(a)
				    			write_message(sender, "‚åõ–ü–æ–¥–æ–∂–¥–∏—Ç–µ...")
				    			link = "üë®‚Äçüíº" + name + ", " + "–≤–æ—Ç –≤–∞—à–∞ —Å–æ–∫—Ä–∞—â–µ–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞: " + link
				    			write_message(sender, link)
				    		except:
				    			write_message(sender, "‚ö†–û—à–∏–±–∫–∞!")

				    	elif "–≤–∏–¥–µ–æ " in index:
				    		try:
				    			a = index.split(" ", 1)
				    			title = a[1]
				    			Video_script.videos.search(title)
				    			video = Video_script.videos.videos_url
				    			write_video2(sender, video, title)
				    		except:
				    			write_message(sender, "‚ö†–û—à–∏–±–∫–∞!")

			    		elif index == "–≤–∏–¥–µ–æ":
			    			write_message(sender, "‚ö†–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /–≤–∏–¥–µ–æ [–Ω–∞–∑–≤–∞–Ω–∏–µ]")

			    		elif "—Ä–µ–ø–æ—Ä—Ç " in index or "report " in index: #–ü–†–û–í–ï–†–ò–¢–¨!!!!!!!!!!!!!!!!!!!!!!
			    			iduser = event.message.get("from_id")
			    			user = vk_session.method("users.get", {"user_ids": iduser})
			    			name = user[0]['first_name'] #–ü–û–õ–£–ß–ï–ù–ò–ï –ò–ú–ï–ù–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
			    			name2 = user[0]['last_name'] #–ü–û–õ–£–ß–ï–ù–ò–ï –§–ê–ú–ò–õ–ò–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
			    			a = reseived_message.lower().split(" ", 1)
			    			text = a[1]
			    			message1 = '\n' + "üì´–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫—É!" + '\n'
			    			
			    			message2 = '\n' + "üÜîId –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è: " + str(iduser)
			    			message3 = '\n' + "üë§–ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è: " + name + " " + name2
			    			message4 = '\n' + "‚úâ–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è: " + '\n'+ '\n' + text
			    			message = message1 + message2 + message3 + message4
			    			vk_session.method('messages.send', {'peer_id': 2000000000 + 23, 'message': message, 'random_id': get_random_id()})
			    			write_message(sender, "‚úÖ–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏!")

			    		elif index == "—Ä–µ–ø–æ—Ä—Ç" or index == "report": #–ü–†–û–í–ï–†–ò–¢–¨!!!!!!!!!!!!!!!!!!!!!!
			    			write_message(sender, "‚ö†–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /—Ä–µ–ø–æ—Ä—Ç [—Å–æ–æ–±—â–µ–Ω–∏–µ]")

		    			else:
		    				iduser = event.message.get("from_id")
			    			user = vk_session.method('users.get', {'user_ids': iduser, 'fields': 'sex'})
					    	sex = user[0]['sex'] #–ü–æ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
			    			message = reseived_message.lower()
			    			words = Phrases.filter.words #–°–ª–æ–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
			    			text_bot = Phrases.Hello.text_bot #–°–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
			    			Phrases.filter.analysis(message)
			    			Phrases.Hello.write(words, sex)
			    			for t in text_bot:
			    				write_message(sender, t)
			    			Phrases.remove.delete(words, text_bot)


#///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		    	elif event.from_user and event.message and event.message.get('text'):   #–ï–°–õ–ò –ù–ê–ü–ò–°–ê–õ–ò –í –õ–°
		    		reseived_message = event.message.get("text")
		    		sender = event.message.get("from_id")
		    		id_message = event.message.get("id")

		    		if reseived_message.lower() == "—Å–ª–µ–¥—É—é—â–∏–π –∞–Ω–µ–∫–¥–æ—ÇüòÇ":
		    			f = open('Data/joke.txt', 'r+')
		    			a = f.readlines()
		    			joke = random.choice(a)
		    			keyboard = Buttons.keyboard_joke
		    			write_button2(sender, joke)
		    			f.close()

		    		elif reseived_message.lower() == "—Å–ª–µ–¥—É—é—â–∞—è –∏—Å—Ç–æ—Ä–∏—èüò±":
		    			story = random.choice(History.history_list_bot)
		    			keyboard = Buttons.keyboard_history
	    				write_button2(sender, story)

		    		elif reseived_message.lower() == "—Å–ª–µ–¥—É—é—â–∞—è —Ü–∏—Ç–∞—Ç–∞üìï":
		    			CITAT = 'https://citatnica.ru/citaty/samye-luchshie-tsitaty'
	    				headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.102 YaBrowser/20.9.1.110 Yowser/2.5 Safari/537.36'}
	    				full_page = requests.get(CITAT, headers=headers)
	    				soup = BeautifulSoup(full_page.content, 'html.parser')
	    				convertd = soup.findAll("div", {"class": "su-note"})
	    				a = random.choice(convertd)
	    				a = a.text
	    				keyboard = Buttons.keyboard_citat
		    			write_button2(sender, a)

		    		elif reseived_message.lower() == "/help!":
		    			write_message2(sender, commands.help_list_bot2)

		    		elif reseived_message.lower() in commands.help_list_user: #–ö–û–ú–ê–ù–î–´
		    			write_message2(sender, commands.help_list_bot)

		    		elif reseived_message.lower() in commands.joke_list_user: #–ê–ù–ï–ö–î–û–¢
	    				f = open('joke.txt', 'r+')
		    			a = f.readlines()
		    			joke = random.choice(a)
		    			keyboard = Buttons.keyboard_joke
		    			write_button2(sender, joke)
		    			f.close()

		    		elif reseived_message.lower() in commands.history_list_user: #–ñ–£–¢–ö–ê–Ø –ò–°–¢–û–†–ò–Ø
		    			story = random.choice(History.history_list_bot)
		    			keyboard = Buttons.keyboard_history
	    				write_button2(sender, story)

		    		elif reseived_message.lower() in commands.cicat_list_user: #–¶–ò–¢–ê–¢–ê
		    			CITAT = 'https://citatnica.ru/citaty/samye-luchshie-tsitaty'
		    			headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.102 YaBrowser/20.9.1.110 Yowser/2.5 Safari/537.36'}
		    			full_page = requests.get(CITAT, headers=headers)
		    			soup = BeautifulSoup(full_page.content, 'html.parser')
		    			convertd = soup.findAll("div", {"class": "su-note"})
		    			a = random.choice(convertd)
		    			a = a.text
		    			keyboard = Buttons.keyboard_citat
		    			write_button2(sender, a)

		    		elif reseived_message.lower() == "—à–∞—Ä" or reseived_message.lower() == "/—à–∞—Ä":  #–ö–û–ú–ê–ù–î–ê –®–ê–†
		    				write_message2(sender, "‚ö†–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É —à–∞—Ä [—Ñ—Ä–∞–∑–∞]")

		    		elif ("—à–∞—Ä " in reseived_message.lower() or "/—à–∞—Ä " in reseived_message.lower()) and not (reseived_message.lower() == "—à–∞—Ä" or reseived_message.lower() == "/—à–∞—Ä"):
		    			ball = random.choice(commands.ball_list)
		    			write_message2(sender, "üîÆ")
		    			write_message2(sender, ball)

		    		elif "–≤—ã–±–µ—Ä–∏ " in reseived_message.lower():    #–ö–û–ú–ê–ù–î–ê –í–´–ë–ï–†–ò
		    			reseived_message_new = reseived_message.lower().split("–≤—ã–±–µ—Ä–∏ ", 1)
		    			index = reseived_message_new[1].split(" –∏–ª–∏ ")
		    			index1 = index[0]
		    			index2 = index[1]
		    			if "?" in index2 or "." in index2 or "!" in index2 or "," in index2:
		    				index2 = list(index2)
		    				index2.pop()
		    				index_new = index2
		    				index2 = ''.join(index_new)
		    				index = [index1, index2]
		    				message = random.choice(index)
		    				write_message2(sender, message)
		    			else:
		    				index = [index1, index2]
		    				message = random.choice(index)
		    				write_message2(sender, message)

		    		elif reseived_message.lower() == "–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å" or reseived_message.lower() == "–∏–Ω—Ñ–∞" or reseived_message.lower() == "/–∏–Ω—Ñ–∞" or reseived_message.lower() == "/–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å": #–í–ï–†–û–Ø–¢–ù–û–°–¢–¨
		    			infa = random.choice(commands.infa_list_bot)
		    			write_message2(sender, infa)

		    		elif ("–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å " in reseived_message.lower() or "–∏–Ω—Ñ–∞ " in reseived_message.lower() or "/–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å " in reseived_message.lower() or "/–∏–Ω—Ñ–∞ " in reseived_message.lower()) and not (reseived_message.lower() == "–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å" or reseived_message.lower() == "–∏–Ω—Ñ–∞" or reseived_message.lower() == "/–∏–Ω—Ñ–∞" or reseived_message.lower() == "/–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å"):
		    			reseived_message_new = reseived_message.lower().split(" ", 1)
		    			index = reseived_message_new[1]
		    			index = list(index)
		    			if "?" in index or "." in index or "!" in index:
		    				index.pop()
		    				index_new = index
		    				index = ''.join(index_new)
		    				infa = random.choice(commands.infa_list_bot)
		    				message = "–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Ç–æ–≥–æ, —á—Ç–æ " + index + ", —Ä–∞–≤–Ω–∞: " + infa
		    				write_message2(sender, message)
		    			else:
		    				index = ''.join(index)
		    				infa = random.choice(commands.infa_list_bot)
		    				message = "–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Ç–æ–≥–æ, —á—Ç–æ " + index + ", —Ä–∞–≤–Ω–∞: " + infa
		    				write_message2(sender, message)

		    		elif ("/flip " in reseived_message.lower() or "flip " in reseived_message.lower()) and not (reseived_message.lower() == "/flip" or reseived_message.lower() == "flip"):    #–ö–û–ú–ê–ù–î–ê /FLIP
		    			reseived_message_new = reseived_message.lower().split(" ", 1)
		    			index = reseived_message_new[1]
		    			flip = index[::-1]
		    			write_message2(sender, "üîÅ–ü–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞—é...")
		    			write_message2(sender, flip)

		    		elif reseived_message.lower() == "/flip" or reseived_message.lower() == "flip":
		    			write_message2(sender, "‚ö†–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /flip [—Ñ—Ä–∞–∑–∞]")

		    		elif reseived_message.lower() == "–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å" or reseived_message.lower() == "–∏–Ω—Ñ–∞" or reseived_message.lower() == "/–∏–Ω—Ñ–∞" or reseived_message.lower() == "/–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å": #–í–ï–†–û–Ø–¢–ù–û–°–¢–¨
		    			infa = random.choice(commands.infa_list_bot)
		    			write_message2(sender, infa)

		    		elif ("–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å " in reseived_message.lower() or "–∏–Ω—Ñ–∞ " in reseived_message.lower() or "/–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å " in reseived_message.lower() or "/–∏–Ω—Ñ–∞ " in reseived_message.lower()) and not (reseived_message.lower() == "–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å" or reseived_message.lower() == "–∏–Ω—Ñ–∞" or reseived_message.lower() == "/–∏–Ω—Ñ–∞" or reseived_message.lower() == "/–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å"):
		    			reseived_message_new = reseived_message.lower().split(" ", 1)
		    			index = reseived_message_new[1]
		    			index = list(index)
		    			if "?" in index or "." in index or "!" in index:
		    				index.pop()
		    				index_new = index
		    				index = ''.join(index_new)
		    				infa = random.choice(commands.infa_list_bot)
		    				message = "–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Ç–æ–≥–æ, —á—Ç–æ " + index + ", —Ä–∞–≤–Ω–∞: " + infa
		    				write_message2(sender, message)
		    			else:
		    				index = ''.join(index)
		    				infa = random.choice(commands.infa_list_bot)
		    				message = "–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Ç–æ–≥–æ, —á—Ç–æ " + index + ", —Ä–∞–≤–Ω–∞: " + infa
		    				write_message2(sender, message)

		    		elif reseived_message.lower() in commands.id_list: #–ö–û–ú–ê–ù–î–ê –ê–ô–î–ò
		    			iduser = event.message.get("from_id")
		    			user = vk_session.method("users.get", {"user_ids": iduser})
		    			name = user[0]['first_name']
		    			write_message2(sender, "‚åõ–ü–æ–¥–æ–∂–¥–∏—Ç–µ...")
		    			iduser = name + ", " + " –≤–∞—à üÜî: " + str(iduser)
		    			write_message2(sender, iduser)

		    		elif reseived_message.lower() == "–ø–æ–≥–æ–¥–∞" or reseived_message.lower() == "/–ø–æ–≥–æ–¥–∞":   # –ü–û–ì–û–î–ê
		    			write_message2(sender, "‚ö†–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –ø–æ–≥–æ–¥–∞ [–≥–æ—Ä–æ–¥]")

		    		elif ("–ø–æ–≥–æ–¥–∞ " in reseived_message.lower() or "/–ø–æ–≥–æ–¥–∞ " in reseived_message.lower()) and not (reseived_message.lower() == "–ø–æ–≥–æ–¥–∞" or reseived_message.lower() == "/–ø–æ–≥–æ–¥–∞"):
		    			try:
			    			reseived_message_new = reseived_message.lower().split(" ", 1)
			    			city = reseived_message_new[1]
			    			observation = mgr.weather_at_place(city)
			    			weather = observation.weather
			    			a = weather.detailed_status
			    			temp = weather.temperature('celsius')['temp']
			    			wind = observation.weather.wind()['speed']
			    			weather1 = '''
			    			üå•–ü–æ–≥–æ–¥–∞üå•
			    			'''
			    			weathercity = "\nüèõ–í –≥–æ—Ä–æ–¥–µ —Å–µ–π—á–∞—Å " + a + "."
			    			down1 = '''
			    			'''
			    			cels = "\nüå°–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –≥–æ—Ä–æ–¥–µ " + city + " –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ —Ä–∞–≤–Ω–∞ " + str(temp) + "¬∞ –≥—Ä–∞–¥—É—Å–æ–≤."
			    			down2 = '''
			    			'''
			    			wind1 = "\nüí®–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ " + str(wind) + " –º/—Å."
			    			message = weather1 + weathercity + down1 + cels + down2 + wind1
			    		except:
			    			write_message2(sender, "‚ö†–û—à–∏–±–∫–∞! –¢–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
			    		else:
			    			write_message2(sender, message)

		    		elif "–≤–∏–∫–∏ " in reseived_message.lower() or "/–≤–∏–∫–∏ " in reseived_message.lower() or "–≤–∏–∫–∏–ø–µ–¥–∏—è " in reseived_message.lower() or "/–≤–∏–∫–∏–ø–µ–¥–∏—è " in reseived_message.lower(): #–ö–û–ú–ê–ù–î–ê 
		    			try:
			    			reseived_message_new = reseived_message.lower().split(" ", 1)
			    			index = reseived_message_new[1]
			    			write_message2(sender, "‚åõ–ü–æ–¥–æ–∂–¥–∏—Ç–µ...")
			    			wikipedia.set_lang('ru')
			    			wiki = wikipedia.summary(index)
			    		except:
			    			write_message2(sender, "‚ö†–ù–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.")
			    		else:
			    			write_message2(sender, wiki)

		    		elif "–ø–µ—Ä–µ–≤–æ–¥ " in reseived_message.lower() or "–ø–µ—Ä–µ–≤–µ–¥–∏ " in reseived_message.lower() or "/–ø–µ—Ä–µ–≤–æ–¥ " in reseived_message.lower() or "/–ø–µ—Ä–µ–≤–µ–¥–∏ " in reseived_message.lower(): #–ö–û–ú–ê–ù–î–ê –ü–ï–†–ï–í–û–î–ê
		    			try:
			    			reseived_message_new = reseived_message.lower().split(" ", 1)
			    			index = reseived_message_new[1]
			    			write_message2(sender, "‚åõ–ü–æ–¥–æ–∂–¥–∏—Ç–µ...")
			    			translator= Translator(to_lang="ru")
			    			translation = translator.translate(index)
			    		except:
			    			write_message2(sender, "‚ö†–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥.")
			    		else:
			    			write_message2(sender, translation)							

		    		elif reseived_message.lower() == "/ed" or ("/ed " in reseived_message.lower() and not reseived_message.lower() == "/ed"):
		    			write_message2(sender, "‚ö†–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –±–µ—Å–µ–¥–µ.")

		    		elif reseived_message.lower() == "/idc" or reseived_message.lower() == "idc": #–ö–û–ú–ê–ù–î–ê –ê–ô–î–ò –ë–ï–°–ï–î–´
		    			write_message2(sender, "‚ö†–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –±–µ—Å–µ–¥–µ.")

			    	elif reseived_message.lower() == "/vs":
			    		write_message2(sender, "‚ö†–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /vs [–ø—Ä–æ—Ç–∏–≤–Ω–∏–∫] –ø—Ä–æ—Ç–∏–≤ [–ø—Ä–æ—Ç–∏–≤–Ω–∏–∫2]")

			    	elif "/vs " in reseived_message.lower():
			    		Fight.user(sender, reseived_message)
			    		

			    	elif reseived_message.lower() == "/covid" or reseived_message.lower() == "covid" or reseived_message.lower() == "–∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å" or reseived_message.lower() == "/–∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å" or reseived_message.lower() == "/covid19" or reseived_message.lower() == "–∫–æ–≤–∏–¥" or reseived_message.lower() == "/–∫–æ–≤–∏–¥": #–ö–û–†–û–ù–ê–í–ò–†–£–°
			    		covid1()

		    		elif reseived_message.lower() == "/—Å–æ–∫—Ä–∞—Ç–∏ —Å—Å—ã–ª–∫—É" or reseived_message.lower() == "—Å–æ–∫—Ä–∞—Ç–∏ —Å—Å—ã–ª–∫—É": #–°–û–ö–†–ê–©–ï–ù–ù–ê–Ø –°–°–´–õ–ö–ê
		    			write_message2(sender, "‚ö†–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /—Å–æ–∫—Ä–∞—Ç–∏ —Å—Å—ã–ª–∫—É [—Å—Å—ã–ª–∫–∞]")

		    		elif "—Å–æ–∫—Ä–∞—Ç–∏ —Å—Å—ã–ª–∫—É " in reseived_message.lower(): #–°–û–ö–†–ê–©–ï–ù–ù–ê–Ø –°–°–´–õ–ö–ê
		    			try:
			    			iduser = event.message.get("from_id")
			    			user = vk_session.method("users.get", {"user_ids": iduser})
			    			name = user[0]['first_name']
			    			a = reseived_message.lower().split("—Å–æ–∫—Ä–∞—Ç–∏ —Å—Å—ã–ª–∫—É ", 1)
			    			a = a[1]
			    			s = pyshorteners.Shortener()
			    			link = s.tinyurl.short(a)
			    			write_message2(sender, "‚åõ–ü–æ–¥–æ–∂–¥–∏—Ç–µ...")
			    			link = "üë®‚Äçüíº" + name + ", " + "–≤–æ—Ç –≤–∞—à–∞ —Å–æ–∫—Ä–∞—â–µ–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞: " + link
			    			write_message2(sender, link)
			    		except:
			    			write_message2(sender, "‚ö†–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –ø—Ä–∞–≤–∏–ª—å–Ω–æ!")

		    		elif reseived_message.lower() == "/infa":
				    	user = vk_session.method('users.get', {'user_ids': sender, 'fields': 'sex'})
				    	sex = user[0]['sex']
				    	message = "–ò–∑–º–µ–Ω–µ–Ω–æ."
				    	write_message2(sender, "–í–∑–ª–æ–º –ø–µ–Ω—Ç–∞–≥–æ–Ω–∞: 0%")
				    	id_message = id_message + 1
				    	n = 0
				    	while n <= 90:
				    		n = n + 20
				    		message = "üë©‚Äç–í–∑–ª–æ–º –ø–µ–Ω—Ç–∞–≥–æ–Ω–∞: " + str(n) + "%"
				    		edit_message(sender, message, id_message)
				    	write_message2(sender, "üî•–ü–µ–Ω—Ç–∞–≥–æ–Ω –≤–∑–ª–æ–º–∞–Ω!")

		    		elif reseived_message.lower() == "/–±–∞–ª–∞–Ω—Å" or reseived_message == "–ë–∞–ª–∞–Ω—Åüí∞":
		    			iduser = sender #–ê–ô–î–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
		    			user = vk_session.method("users.get", {"user_ids": iduser})
		    			name = user[0]['first_name'] #–ü–û–õ–£–ß–ï–ù–ò–ï –ò–ú–ï–ù–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
		    			Balance_script.Money.Check_and_write(iduser)
				    	text = name + ", " + "–≤–∞—à –±–∞–ª–∞–Ω—Å" + "&#128176;" + ": " + str(Balance.Money.balance) + "&#128178;"
				    	keyboard = Buttons.keyboard_balance
				    	write_button2(sender, text)

		    		elif "/–≥–∏—Ñ " in reseived_message.lower() or "/gif " in reseived_message.lower():
		    			messege = reseived_message.lower().split(" ", 1)
		    			text = messege[1]
		    			a = Gif_script.Gif.Search(text)
		    			write_message2(sender, Gif_script.Gif.url)

		    		elif "/–≤–∏–¥–µ–æ " in reseived_message.lower():
		    			a = reseived_message.lower().split(" ", 1)
		    			title = a[1]
		    			Video_script.videos.search(title)
		    			video = Video_script.videos.videos_url
		    			write_video(sender, video, title)

		    		elif reseived_message.lower() == "/–≤–∏–¥–µ–æ":
		    			write_message2(sender, "‚ö†–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /–≤–∏–¥–µ–æ [–Ω–∞–∑–≤–∞–Ω–∏–µ]")

		    		elif "/—Ä–µ–ø–æ—Ä—Ç " in reseived_message.lower() or "/report " in reseived_message.lower():
		    			try:
			    			user = vk_session.method("users.get", {"user_ids": sender})
			    			name = user[0]['first_name'] #–ü–û–õ–£–ß–ï–ù–ò–ï –ò–ú–ï–ù–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
			    			name2 = user[0]['last_name'] #–ü–û–õ–£–ß–ï–ù–ò–ï –§–ê–ú–ò–õ–ò–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
			    			a = reseived_message.lower().split(" ", 1)
			    			text = a[1]
			    			message1 = '\n' + "üì´–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫—É!" + '\n'
			    			
			    			message2 = '\n' + "üÜîId –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è: " + str(sender)
			    			message3 = '\n' + "üë§–ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è: " + name + " " + name2
			    			message4 = '\n' + "‚úâ–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è: " + '\n'+ '\n' + text + '\n' + '\n'
			    			message5 = "–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /–æ—Ç–≤–µ—Ç [–∞–π–¥–∏] [—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è]"
			    			message = message1 + message2 + message3 + message4 + message5
			    			vk_session.method('messages.send', {'peer_id': 2000000000 + 23, 'message': message, 'random_id': get_random_id()})
			    			write_message2(sender, "‚úÖ–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏!")
			    		except:
			    			write_message2(sender, "‚ö†–û—à–∏–±–∫–∞!")	
			    		

		    		elif reseived_message.lower() == "/—Ä–µ–ø–æ—Ä—Ç" or reseived_message.lower() == "/report": #–ü–†–û–í–ï–†–ò–¢–¨!!!!!!!!!!!!!!!!!!!!!!
		    			write_message2(sender, "‚ö†–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /—Ä–µ–ø–æ—Ä—Ç [—Å–æ–æ–±—â–µ–Ω–∏–µ]")
		    		
		    		elif reseived_message.lower() == "/–º–µ–º":
		    			write_photo2(sender)

		    		else:
		    			user = vk_session.method('users.get', {'user_ids': sender, 'fields': 'sex'})
				    	sex = user[0]['sex'] #–ü–æ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
		    			message = reseived_message.lower()
		    			words = Phrases.filter.words #–°–ª–æ–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
		    			text_bot = Phrases.Hello.text_bot #–°–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
		    			Phrases.filter.analysis(message)
		    			Phrases.Hello.write(words, sex)
		    			for t in text_bot:
		    				write_message2(sender, t)
		    			Phrases.remove.delete(words, text_bot)

	except requests.exceptions.ReadTimeout:
		print("\n –ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä–∞–º –í–ö \n")
		time.sleep(3)

		

